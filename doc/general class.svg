<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1093px" preserveAspectRatio="none" style="width:1766px;height:1093px;background:#FFFFFF;" version="1.1" viewBox="0 0 1766 1093" width="1766.5px" zoomAndPan="magnify"><defs/><g><!--MD5=[e6c809820d88acc3564faeb20394ab9d]
class MainWindow--><g id="elem_MainWindow"><rect codeLine="3" fill="#F1F1F1" height="94.4375" id="MainWindow" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="112" x="822.5" y="163"/><ellipse cx="856.625" cy="171" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M857.625,169.25 Q857.7266,169 857.8438,168.875 Q857.9609,168.75 858.0938,168.75 Q858.3281,168.75 858.4766,168.8906 Q858.625,169.0313 858.625,169.3594 L858.625,170.1406 Q858.625,170.4688 858.4844,170.6094 Q858.3438,170.75 858.125,170.75 Q857.9297,170.75 857.8047,170.6641 Q857.6797,170.5781 857.625,170.3516 Q857.6016,170.1953 857.5156,170.1094 Q857.3594,169.9453 857.0781,169.8516 Q856.7969,169.75 856.5156,169.75 Q856.1641,169.75 855.8672,169.8906 Q855.5781,170.0313 855.3516,170.3438 Q855.125,170.6563 855.125,171.0859 L855.125,171.5469 Q855.125,172.0625 855.5469,172.4063 Q855.9688,172.75 856.7188,172.75 Q857.1641,172.75 857.4766,172.6484 Q857.6563,172.5938 857.8594,172.4141 Q857.9922,172.3125 858.0625,172.2813 Q858.1328,172.25 858.2188,172.25 Q858.3828,172.25 858.5,172.3828 Q858.625,172.5078 858.625,172.6875 Q858.625,172.8594 858.4531,173.0625 Q858.2031,173.3594 857.8047,173.5234 Q857.2813,173.75 856.6406,173.75 Q855.8906,173.75 855.2891,173.4531 Q854.8047,173.2188 854.4609,172.7109 Q854.125,172.2031 854.125,171.6016 L854.125,171.0547 Q854.125,170.4297 854.4219,169.8828 Q854.7266,169.3359 855.25,169.0469 Q855.7813,168.75 856.375,168.75 Q856.7344,168.75 857.0469,168.875 Q857.3594,169 857.625,169.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="39.5" x="866.875" y="173.8643">MainWindow</text><line style="stroke:#181818;stroke-width:0.25;" x1="823" x2="934" y1="179" y2="179"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="826.5" y="183"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="61.5" x="832.5" y="188.2666">Ui::MainWindow * ui</text><line style="stroke:#181818;stroke-width:0.25;" x1="823" x2="934" y1="191.8047" y2="191.8047"/><ellipse cx="828" cy="197.3047" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="76.5" x="832.5" y="201.0713">MainWindow(QWidget *)</text><ellipse cx="828" cy="206.1094" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="76.5" x="832.5" y="209.876">~MainWindow() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="832.5" y="218.6807"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="826.5" y="222.2188"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="71" x="832.5" y="227.4854">void displayHelloText()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="826.5" y="231.0234"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="98" x="832.5" y="236.29">void on_theoryButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="826.5" y="239.8281"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="95.5" x="832.5" y="245.0947">void on_demoButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="826.5" y="248.6328"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="99" x="832.5" y="253.8994">void on_testingButton_clicked()</text></g><!--MD5=[3ad026a2d5f086a2c550d05a36bc408c]
class DemoSystem--><g id="elem_DemoSystem"><rect codeLine="17" fill="#F1F1F1" height="103.2422" id="DemoSystem" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="141.5" x="120.75" y="327.25"/><ellipse cx="168.625" cy="335.25" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M169.625,333.5 Q169.7266,333.25 169.8438,333.125 Q169.9609,333 170.0938,333 Q170.3281,333 170.4766,333.1406 Q170.625,333.2813 170.625,333.6094 L170.625,334.3906 Q170.625,334.7188 170.4844,334.8594 Q170.3438,335 170.125,335 Q169.9297,335 169.8047,334.9141 Q169.6797,334.8281 169.625,334.6016 Q169.6016,334.4453 169.5156,334.3594 Q169.3594,334.1953 169.0781,334.1016 Q168.7969,334 168.5156,334 Q168.1641,334 167.8672,334.1406 Q167.5781,334.2813 167.3516,334.5938 Q167.125,334.9063 167.125,335.3359 L167.125,335.7969 Q167.125,336.3125 167.5469,336.6563 Q167.9688,337 168.7188,337 Q169.1641,337 169.4766,336.8984 Q169.6563,336.8438 169.8594,336.6641 Q169.9922,336.5625 170.0625,336.5313 Q170.1328,336.5 170.2188,336.5 Q170.3828,336.5 170.5,336.6328 Q170.625,336.7578 170.625,336.9375 Q170.625,337.1094 170.4531,337.3125 Q170.2031,337.6094 169.8047,337.7734 Q169.2813,338 168.6406,338 Q167.8906,338 167.2891,337.7031 Q166.8047,337.4688 166.4609,336.9609 Q166.125,336.4531 166.125,335.8516 L166.125,335.3047 Q166.125,334.6797 166.4219,334.1328 Q166.7266,333.5859 167.25,333.2969 Q167.7813,333 168.375,333 Q168.7344,333 169.0469,333.125 Q169.3594,333.25 169.625,333.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="41.5" x="178.875" y="338.1143">DemoSystem</text><line style="stroke:#181818;stroke-width:0.25;" x1="121.25" x2="261.75" y1="343.25" y2="343.25"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="124.75" y="347.25"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="63.5" x="130.75" y="352.5166">Ui::DemoSystem * ui</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="124.75" y="356.0547"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="89.5" x="130.75" y="361.3213">KruskalDemo * kruskalDemo</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="124.75" y="364.8594"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="84" x="130.75" y="370.126">CyclesDemo * cyclesDemo</text><line style="stroke:#181818;stroke-width:0.25;" x1="121.25" x2="261.75" y1="373.6641" y2="373.6641"/><ellipse cx="126.25" cy="379.1641" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="78.5" x="130.75" y="382.9307">DemoSystem(QWidget *)</text><ellipse cx="126.25" cy="387.9688" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="78.5" x="130.75" y="391.7354">~DemoSystem() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="130.75" y="400.54"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="124.75" y="404.0781"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="128.5" x="130.75" y="409.3447">void closeEvent(QCloseEvent *) override</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="124.75" y="412.8828"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="60.5" x="130.75" y="418.1494">void ShowKruskal()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="124.75" y="421.6875"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="58" x="130.75" y="426.9541">void ShowCycles()</text></g><!--MD5=[130b117cd90963d8c6e76bf3aa1b2a11]
class GraphDemo--><g id="elem_GraphDemo"><rect codeLine="31" fill="#F1F1F1" height="138.4609" id="GraphDemo" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="403.5" x="279.75" y="309.5"/><ellipse cx="460.125" cy="317.5" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M461.125,315.75 Q461.2266,315.5 461.3438,315.375 Q461.4609,315.25 461.5938,315.25 Q461.8281,315.25 461.9766,315.3906 Q462.125,315.5313 462.125,315.8594 L462.125,316.6406 Q462.125,316.9688 461.9844,317.1094 Q461.8438,317.25 461.625,317.25 Q461.4297,317.25 461.3047,317.1641 Q461.1797,317.0781 461.125,316.8516 Q461.1016,316.6953 461.0156,316.6094 Q460.8594,316.4453 460.5781,316.3516 Q460.2969,316.25 460.0156,316.25 Q459.6641,316.25 459.3672,316.3906 Q459.0781,316.5313 458.8516,316.8438 Q458.625,317.1563 458.625,317.5859 L458.625,318.0469 Q458.625,318.5625 459.0469,318.9063 Q459.4688,319.25 460.2188,319.25 Q460.6641,319.25 460.9766,319.1484 Q461.1563,319.0938 461.3594,318.9141 Q461.4922,318.8125 461.5625,318.7813 Q461.6328,318.75 461.7188,318.75 Q461.8828,318.75 462,318.8828 Q462.125,319.0078 462.125,319.1875 Q462.125,319.3594 461.9531,319.5625 Q461.7031,319.8594 461.3047,320.0234 Q460.7813,320.25 460.1406,320.25 Q459.3906,320.25 458.7891,319.9531 Q458.3047,319.7188 457.9609,319.2109 Q457.625,318.7031 457.625,318.1016 L457.625,317.5547 Q457.625,316.9297 457.9219,316.3828 Q458.2266,315.8359 458.75,315.5469 Q459.2813,315.25 459.875,315.25 Q460.2344,315.25 460.5469,315.375 Q460.8594,315.5 461.125,315.75 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="38.5" x="470.375" y="320.3643">GraphDemo</text><line style="stroke:#181818;stroke-width:0.25;" x1="280.25" x2="682.75" y1="325.5" y2="325.5"/><polygon fill="none" points="285.25,328.5,287.25,330.5,285.25,332.5,283.25,330.5" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="79.5" x="289.75" y="334.7666">QGraphicsScene * scene</text><polygon fill="none" points="285.25,337.3047,287.25,339.3047,285.25,341.3047,283.25,339.3047" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="104" x="289.75" y="343.5713">QGraphicsScene * internalScene</text><polygon fill="none" points="285.25,346.1094,287.25,348.1094,285.25,350.1094,283.25,348.1094" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="96" x="289.75" y="352.376">std::unique_ptr&lt;Graph&gt; graph</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="289.75" y="361.1807"> </text><polygon fill="none" points="285.25,363.7188,287.25,365.7188,285.25,367.7188,283.25,365.7188" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="131" x="289.75" y="369.9854">std::list&lt;QGraphicsSvgItem *&gt; demoSteps</text><polygon fill="none" points="285.25,372.5234,287.25,374.5234,285.25,376.5234,283.25,374.5234" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="157" x="289.75" y="378.79">std::list&lt;QGraphicsSvgItem*&gt;::iterator currentStep</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="289.75" y="387.5947"> </text><polygon fill="none" points="285.25,390.1328,287.25,392.1328,285.25,394.1328,283.25,392.1328" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="28" x="289.75" y="396.3994">QDir tmp</text><polygon fill="none" points="285.25,398.9375,287.25,400.9375,285.25,402.9375,283.25,400.9375" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="87" x="289.75" y="405.2041">int snapshotNumber = 1000</text><line style="stroke:#181818;stroke-width:0.25;" x1="280.25" x2="682.75" y1="408.7422" y2="408.7422"/><ellipse cx="285.25" cy="414.2422" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="390.5" x="289.75" y="418.0088">GraphDemo(QWidget * parent, const QString &amp; tempDirName, const QRect &amp; sceneRect, const QRect &amp; internalSceneRect)</text><ellipse cx="285.25" cy="423.0469" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="80.5" x="289.75" y="426.8135">virtual ~GraphDemo() = 0</text><polygon fill="#FFFF44" points="285.25,429.3516,287.25,431.3516,285.25,433.3516,283.25,431.3516" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="180" x="289.75" y="435.6182">static std::unique_ptr&lt;Graph&gt; generateGraph() noexcept</text><polygon fill="#FFFF44" points="285.25,438.1563,287.25,440.1563,285.25,442.1563,283.25,440.1563" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="52" x="289.75" y="444.4229">void loadDemo()</text></g><!--MD5=[91430880caeb64985f0c9aa238bea651]
class CyclesDemo--><g id="elem_CyclesDemo"><rect codeLine="49" fill="#F1F1F1" height="156.0703" id="CyclesDemo" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="260.5" x="61.25" y="500"/><ellipse cx="169.625" cy="508" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M170.625,506.25 Q170.7266,506 170.8438,505.875 Q170.9609,505.75 171.0938,505.75 Q171.3281,505.75 171.4766,505.8906 Q171.625,506.0313 171.625,506.3594 L171.625,507.1406 Q171.625,507.4688 171.4844,507.6094 Q171.3438,507.75 171.125,507.75 Q170.9297,507.75 170.8047,507.6641 Q170.6797,507.5781 170.625,507.3516 Q170.6016,507.1953 170.5156,507.1094 Q170.3594,506.9453 170.0781,506.8516 Q169.7969,506.75 169.5156,506.75 Q169.1641,506.75 168.8672,506.8906 Q168.5781,507.0313 168.3516,507.3438 Q168.125,507.6563 168.125,508.0859 L168.125,508.5469 Q168.125,509.0625 168.5469,509.4063 Q168.9688,509.75 169.7188,509.75 Q170.1641,509.75 170.4766,509.6484 Q170.6563,509.5938 170.8594,509.4141 Q170.9922,509.3125 171.0625,509.2813 Q171.1328,509.25 171.2188,509.25 Q171.3828,509.25 171.5,509.3828 Q171.625,509.5078 171.625,509.6875 Q171.625,509.8594 171.4531,510.0625 Q171.2031,510.3594 170.8047,510.5234 Q170.2813,510.75 169.6406,510.75 Q168.8906,510.75 168.2891,510.4531 Q167.8047,510.2188 167.4609,509.7109 Q167.125,509.2031 167.125,508.6016 L167.125,508.0547 Q167.125,507.4297 167.4219,506.8828 Q167.7266,506.3359 168.25,506.0469 Q168.7813,505.75 169.375,505.75 Q169.7344,505.75 170.0469,505.875 Q170.3594,506 170.625,506.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="39.5" x="179.875" y="510.8643">CyclesDemo</text><line style="stroke:#181818;stroke-width:0.25;" x1="61.75" x2="321.25" y1="516" y2="516"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="520"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="61.5" x="71.25" y="525.2666">Ui::CyclesDemo * ui</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="528.8047"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="98" x="71.25" y="534.0713">QGraphicsTextItem * stackView</text><line style="stroke:#181818;stroke-width:0.25;" x1="61.75" x2="321.25" y1="537.6094" y2="537.6094"/><ellipse cx="66.75" cy="543.1094" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="99" x="71.25" y="546.876">CyclesDemo(QWidget * parent)</text><ellipse cx="66.75" cy="551.9141" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="76.5" x="71.25" y="555.6807">~CyclesDemo() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="71.25" y="564.4854"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="568.0234"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="106.5" x="71.25" y="573.29">void on_prevStepButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="576.8281"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="105.5" x="71.25" y="582.0947">void on_nextStepButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="585.6328"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="128" x="71.25" y="590.8994">void on_toBeginOfDemoButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="594.4375"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="122.5" x="71.25" y="599.7041">void on_toEndOfDemoButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="603.2422"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="92" x="71.25" y="608.5088">void on_startButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="612.0469"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="115.5" x="71.25" y="617.3135">void on_switchDemoButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="620.8516"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="122" x="71.25" y="626.1182">void takeSnapshot(QGraphicsScene *)</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="629.6563"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="247.5" x="71.25" y="634.9229">void displayStack(const std::stack&lt;std::pair&lt;Vertex *, Vertex *&gt;&gt; &amp; st) noexcept</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="71.25" y="643.7275"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="65.25" y="647.2656"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="57.5" x="71.25" y="652.5322">void switchDemo()</text></g><!--MD5=[8017fd5517c50149a56984a2b3d460af]
class KruskalDemo--><g id="elem_KruskalDemo"><rect codeLine="70" fill="#F1F1F1" height="138.4609" id="KruskalDemo" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="156" x="339.5" y="508.75"/><ellipse cx="394.375" cy="516.75" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M395.375,515 Q395.4766,514.75 395.5938,514.625 Q395.7109,514.5 395.8438,514.5 Q396.0781,514.5 396.2266,514.6406 Q396.375,514.7813 396.375,515.1094 L396.375,515.8906 Q396.375,516.2188 396.2344,516.3594 Q396.0938,516.5 395.875,516.5 Q395.6797,516.5 395.5547,516.4141 Q395.4297,516.3281 395.375,516.1016 Q395.3516,515.9453 395.2656,515.8594 Q395.1094,515.6953 394.8281,515.6016 Q394.5469,515.5 394.2656,515.5 Q393.9141,515.5 393.6172,515.6406 Q393.3281,515.7813 393.1016,516.0938 Q392.875,516.4063 392.875,516.8359 L392.875,517.2969 Q392.875,517.8125 393.2969,518.1563 Q393.7188,518.5 394.4688,518.5 Q394.9141,518.5 395.2266,518.3984 Q395.4063,518.3438 395.6094,518.1641 Q395.7422,518.0625 395.8125,518.0313 Q395.8828,518 395.9688,518 Q396.1328,518 396.25,518.1328 Q396.375,518.2578 396.375,518.4375 Q396.375,518.6094 396.2031,518.8125 Q395.9531,519.1094 395.5547,519.2734 Q395.0313,519.5 394.3906,519.5 Q393.6406,519.5 393.0391,519.2031 Q392.5547,518.9688 392.2109,518.4609 Q391.875,517.9531 391.875,517.3516 L391.875,516.8047 Q391.875,516.1797 392.1719,515.6328 Q392.4766,515.0859 393,514.7969 Q393.5313,514.5 394.125,514.5 Q394.4844,514.5 394.7969,514.625 Q395.1094,514.75 395.375,515 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="42" x="404.625" y="519.6143">KruskalDemo</text><line style="stroke:#181818;stroke-width:0.25;" x1="340" x2="495" y1="524.75" y2="524.75"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="528.75"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="64" x="349.5" y="534.0166">Ui::KruskalDemo * ui</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="537.5547"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="89" x="349.5" y="542.8213">std::shared_ptr&lt;Graph&gt; mst</text><line style="stroke:#181818;stroke-width:0.25;" x1="340" x2="495" y1="546.3594" y2="546.3594"/><ellipse cx="345" cy="551.8594" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="101.5" x="349.5" y="555.626">KruskalDemo(QWidget * parent)</text><ellipse cx="345" cy="560.6641" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="79" x="349.5" y="564.4307">~KruskalDemo() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="349.5" y="573.2354"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="576.7734"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="106.5" x="349.5" y="582.04">void on_prevStepButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="585.5781"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="105.5" x="349.5" y="590.8447">void on_nextStepButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="594.3828"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="128" x="349.5" y="599.6494">void on_toBeginOfDemoButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="603.1875"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="122.5" x="349.5" y="608.4541">void on_toEndOfDemoButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="611.9922"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="115.5" x="349.5" y="617.2588">void on_switchDemoButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="620.7969"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="143" x="349.5" y="626.0635">void takeSnapshot(QGraphicsScene * scene)</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="349.5" y="634.8682"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="343.5" y="638.4063"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="57.5" x="349.5" y="643.6729">void switchDemo()</text></g><!--MD5=[706e73df52f3df32f52be1ce9adb217e]
class Graph--><g id="elem_Graph"><rect codeLine="89" fill="#F1F1F1" height="200.0938" id="Graph" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="287" x="161" y="686"/><ellipse cx="292.375" cy="694" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M293.375,692.25 Q293.4766,692 293.5938,691.875 Q293.7109,691.75 293.8438,691.75 Q294.0781,691.75 294.2266,691.8906 Q294.375,692.0313 294.375,692.3594 L294.375,693.1406 Q294.375,693.4688 294.2344,693.6094 Q294.0938,693.75 293.875,693.75 Q293.6797,693.75 293.5547,693.6641 Q293.4297,693.5781 293.375,693.3516 Q293.3516,693.1953 293.2656,693.1094 Q293.1094,692.9453 292.8281,692.8516 Q292.5469,692.75 292.2656,692.75 Q291.9141,692.75 291.6172,692.8906 Q291.3281,693.0313 291.1016,693.3438 Q290.875,693.6563 290.875,694.0859 L290.875,694.5469 Q290.875,695.0625 291.2969,695.4063 Q291.7188,695.75 292.4688,695.75 Q292.9141,695.75 293.2266,695.6484 Q293.4063,695.5938 293.6094,695.4141 Q293.7422,695.3125 293.8125,695.2813 Q293.8828,695.25 293.9688,695.25 Q294.1328,695.25 294.25,695.3828 Q294.375,695.5078 294.375,695.6875 Q294.375,695.8594 294.2031,696.0625 Q293.9531,696.3594 293.5547,696.5234 Q293.0313,696.75 292.3906,696.75 Q291.6406,696.75 291.0391,696.4531 Q290.5547,696.2188 290.2109,695.7109 Q289.875,695.2031 289.875,694.6016 L289.875,694.0547 Q289.875,693.4297 290.1719,692.8828 Q290.4766,692.3359 291,692.0469 Q291.5313,691.75 292.125,691.75 Q292.4844,691.75 292.7969,691.875 Q293.1094,692 293.375,692.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="20" x="302.625" y="696.8643">Graph</text><line style="stroke:#181818;stroke-width:0.25;" x1="161.5" x2="447.5" y1="702" y2="702"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="165" y="706"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="76.5" x="171" y="711.2666">std::list&lt;Vertex&gt; vertices</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="165" y="714.8047"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="68" x="171" y="720.0713">std::list&lt;Edge&gt; edges</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="165" y="723.6094"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="79.5" x="171" y="728.876">QGraphicsScene * scene</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="165" y="732.4141"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="63.5" x="171" y="737.6807">QPoint graphCenter</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="165" y="741.2188"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="74.5" x="171" y="746.4854">uint64_t graphDiameter</text><line style="stroke:#181818;stroke-width:0.25;" x1="161.5" x2="447.5" y1="750.0234" y2="750.0234"/><ellipse cx="166.5" cy="755.5234" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="102" x="171" y="759.29">Graph(size_t numberOfVertices)</text><ellipse cx="166.5" cy="764.3281" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="91" x="171" y="768.0947">Graph(const Graph &amp; graph)</text><ellipse cx="166.5" cy="773.1328" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="274" x="171" y="776.8994">void RandomlyLinkVertices(size_t numberOfEdges, int minEdgeCost, int maxEdgeCost)</text><ellipse cx="166.5" cy="781.9375" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="83" x="171" y="785.7041">void Kruskal(Graph &amp; mst)</text><ellipse cx="166.5" cy="790.7422" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="243.5" x="171" y="794.5088">static bool DoesPathExist(std::list&lt;Edge *&gt; &amp; path, Vertex *, Vertex *, Vertex *)</text><ellipse cx="166.5" cy="799.5469" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="137" x="171" y="803.3135">void CheckEdgeInCycleDemo(Edge * edge)</text><ellipse cx="166.5" cy="808.3516" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="179.5" x="171" y="812.1182">void PrepareToPaint(QPoint, int64_t, QGraphicsScene *)</text><ellipse cx="166.5" cy="817.1563" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="91" x="171" y="820.9229">void Paint(uint32_t, uint32_t)</text><ellipse cx="166.5" cy="825.9609" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="54" x="171" y="829.7275">void HideEdges()</text><ellipse cx="166.5" cy="834.7656" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="140" x="171" y="838.5322">Edge * FindEdge(char, char) const noexcept</text><ellipse cx="166.5" cy="843.5703" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="124.5" x="171" y="847.3369">Edge * FindEdge(Edge) const noexcept</text><ellipse cx="166.5" cy="852.375" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="127" x="171" y="856.1416">Vertex * FindVertex(char label) noexcept</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="171" y="864.9463"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="165" y="868.4844"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="162" x="171" y="873.751">void takeSnapshot(QGraphicsScene * scene) const</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="165" y="877.2891"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="215.5" x="171" y="882.5557">void stackChanged(std::stack&lt;std::pair&lt;Vertex *, Vertex *&gt;&gt; &amp;) const</text></g><!--MD5=[60d6b92408f98aed8df94d5c6e04aa63]
class State--><g id="elem_State"><rect codeLine="115" fill="#F1F1F1" height="41.6094" id="State" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="34.5" x="93.75" y="765.25"/><ellipse cx="102.15" cy="773.25" fill="#EB937F" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M101.4,773.75 L101.4,774.75 L103.4,774.75 L103.4,774.25 L103.4,774.0078 L103.7125,773.75 L103.9,773.75 L104.0875,773.75 L104.4,774.0078 L104.4,774.25 L104.4,775.75 L100.4,775.75 L100.1578,775.75 L99.9,775.4375 L99.9,775.25 L99.9,775.0625 L100.1578,774.75 L100.4,774.75 L100.4,774.75 L100.4,771.75 L100.4,771.75 L100.1578,771.75 L99.9,771.4375 L99.9,771.25 L99.9,771.0625 L100.1578,770.75 L100.4,770.75 L104.4,770.75 L104.4,772.25 L104.4,772.4922 L104.0875,772.75 L103.9,772.75 L103.7125,772.75 L103.4,772.4922 L103.4,772.25 L103.4,771.75 L101.4,771.75 L101.4,772.75 L101.9,772.75 L101.9,772.5078 L101.9,772.5078 L102.2125,772.25 L102.4,772.25 L102.5875,772.25 L102.9,772.5078 L102.9,772.75 L102.9,773.75 L102.9,773.9922 L102.5875,774.25 L102.5875,774.25 L102.4,774.25 L102.2125,774.25 L101.9,773.9922 L101.9,773.9922 L101.9,773.75 L101.4,773.75 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="16.5" x="109.35" y="776.1143">State</text><line style="stroke:#181818;stroke-width:0.25;" x1="94.25" x2="127.75" y1="781.25" y2="781.25"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="28.5" x="96.75" y="790.5166">Unvisited</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="21" x="96.75" y="799.3213">Visited</text><line style="stroke:#181818;stroke-width:0.25;" x1="94.25" x2="127.75" y1="802.8594" y2="802.8594"/></g><!--MD5=[c8b153f885034d44a79999642e3ba63d]
class Vertex--><g id="elem_Vertex"><rect codeLine="119" fill="#F1F1F1" height="173.6797" id="Vertex" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="215" x="3.5" y="916"/><ellipse cx="98.875" cy="924" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M99.875,922.25 Q99.9766,922 100.0938,921.875 Q100.2109,921.75 100.3438,921.75 Q100.5781,921.75 100.7266,921.8906 Q100.875,922.0313 100.875,922.3594 L100.875,923.1406 Q100.875,923.4688 100.7344,923.6094 Q100.5938,923.75 100.375,923.75 Q100.1797,923.75 100.0547,923.6641 Q99.9297,923.5781 99.875,923.3516 Q99.8516,923.1953 99.7656,923.1094 Q99.6094,922.9453 99.3281,922.8516 Q99.0469,922.75 98.7656,922.75 Q98.4141,922.75 98.1172,922.8906 Q97.8281,923.0313 97.6016,923.3438 Q97.375,923.6563 97.375,924.0859 L97.375,924.5469 Q97.375,925.0625 97.7969,925.4063 Q98.2188,925.75 98.9688,925.75 Q99.4141,925.75 99.7266,925.6484 Q99.9063,925.5938 100.1094,925.4141 Q100.2422,925.3125 100.3125,925.2813 Q100.3828,925.25 100.4688,925.25 Q100.6328,925.25 100.75,925.3828 Q100.875,925.5078 100.875,925.6875 Q100.875,925.8594 100.7031,926.0625 Q100.4531,926.3594 100.0547,926.5234 Q99.5313,926.75 98.8906,926.75 Q98.1406,926.75 97.5391,926.4531 Q97.0547,926.2188 96.7109,925.7109 Q96.375,925.2031 96.375,924.6016 L96.375,924.0547 Q96.375,923.4297 96.6719,922.8828 Q96.9766,922.3359 97.5,922.0469 Q98.0313,921.75 98.625,921.75 Q98.9844,921.75 99.2969,921.875 Q99.6094,922 99.875,922.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="20" x="109.125" y="926.8643">Vertex</text><line style="stroke:#181818;stroke-width:0.25;" x1="4" x2="218" y1="932" y2="932"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="7.5" y="936"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="31" x="13.5" y="941.2666">char label</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="7.5" y="944.8047"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="83.5" x="13.5" y="950.0713">std::vector&lt;Edge *&gt; edges</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="7.5" y="953.6094"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="79.5" x="13.5" y="958.876">QGraphicsScene * scene</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="7.5" y="962.4141"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="106.5" x="13.5" y="967.6807">std::shared_ptr&lt;QPoint&gt; labelPos</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="7.5" y="971.2188"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="98" x="13.5" y="976.4854">std::shared_ptr&lt;QRect&gt; ellipse</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="7.5" y="980.0234"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="121.5" x="13.5" y="985.29">QGraphicsEllipseItem * graphicsEllipse</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="7.5" y="988.8281"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="111.5" x="13.5" y="994.0947">QGraphicsTextItem * graphicsLabel</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="13.5" y="1002.8994"> </text><ellipse cx="9" cy="1007.9375" fill="none" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="34" x="13.5" y="1011.7041">State state</text><line style="stroke:#181818;stroke-width:0.25;" x1="4" x2="218" y1="1015.2422" y2="1015.2422"/><ellipse cx="9" cy="1020.7422" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="39" x="13.5" y="1024.5088">Vertex(char)</text><ellipse cx="9" cy="1029.5469" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="202" x="13.5" y="1033.3135">void PrepareToPaint(QPoint, QPoint, QSize, QGraphicsScene *)</text><ellipse cx="9" cy="1038.3516" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="93.5" x="13.5" y="1042.1182">QPoint FindLabelPos(QPoint)</text><ellipse cx="9" cy="1047.1563" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="82" x="13.5" y="1050.9229">void Paint(QPen, QBrush)</text><ellipse cx="9" cy="1055.9609" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="67" x="13.5" y="1059.7275">QPoint Coordinates()</text><ellipse cx="9" cy="1064.7656" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="37" x="13.5" y="1068.5322">void Show()</text><ellipse cx="9" cy="1073.5703" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="55" x="13.5" y="1077.3369">void SetColor(int)</text><ellipse cx="9" cy="1082.375" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="50" x="13.5" y="1086.1416">char GetLabel()</text></g><!--MD5=[2e2f8c8f62c4eb3bc59a59727cfd81a5]
class Edge--><g id="elem_Edge"><rect codeLine="142" fill="#F1F1F1" height="164.875" id="Edge" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="167" x="236" y="920.25"/><ellipse cx="309.125" cy="928.25" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M310.125,926.5 Q310.2266,926.25 310.3438,926.125 Q310.4609,926 310.5938,926 Q310.8281,926 310.9766,926.1406 Q311.125,926.2813 311.125,926.6094 L311.125,927.3906 Q311.125,927.7188 310.9844,927.8594 Q310.8438,928 310.625,928 Q310.4297,928 310.3047,927.9141 Q310.1797,927.8281 310.125,927.6016 Q310.1016,927.4453 310.0156,927.3594 Q309.8594,927.1953 309.5781,927.1016 Q309.2969,927 309.0156,927 Q308.6641,927 308.3672,927.1406 Q308.0781,927.2813 307.8516,927.5938 Q307.625,927.9063 307.625,928.3359 L307.625,928.7969 Q307.625,929.3125 308.0469,929.6563 Q308.4688,930 309.2188,930 Q309.6641,930 309.9766,929.8984 Q310.1563,929.8438 310.3594,929.6641 Q310.4922,929.5625 310.5625,929.5313 Q310.6328,929.5 310.7188,929.5 Q310.8828,929.5 311,929.6328 Q311.125,929.7578 311.125,929.9375 Q311.125,930.1094 310.9531,930.3125 Q310.7031,930.6094 310.3047,930.7734 Q309.7813,931 309.1406,931 Q308.3906,931 307.7891,930.7031 Q307.3047,930.4688 306.9609,929.9609 Q306.625,929.4531 306.625,928.8516 L306.625,928.3047 Q306.625,927.6797 306.9219,927.1328 Q307.2266,926.5859 307.75,926.2969 Q308.2813,926 308.875,926 Q309.2344,926 309.5469,926.125 Q309.8594,926.25 310.125,926.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="16.5" x="319.375" y="931.1143">Edge</text><line style="stroke:#181818;stroke-width:0.25;" x1="236.5" x2="402.5" y1="936.25" y2="936.25"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="240" y="940.25"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="40.5" x="246" y="945.5166">Vertex * from</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="240" y="949.0547"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="32.5" x="246" y="954.3213">Vertex * to</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="240" y="957.8594"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="22.5" x="246" y="963.126">int cost</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="240" y="966.6641"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="79.5" x="246" y="971.9307">QGraphicsScene * scene</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="240" y="975.4688"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="104.5" x="246" y="980.7354">std::shared_ptr&lt;QPoint&gt; costPos</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="240" y="984.2734"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="93" x="246" y="989.54">std::shared_ptr&lt;QLine&gt; edge</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="240" y="993.0781"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="110.5" x="246" y="998.3447">QGraphicsLineItem * graphicsEdge</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="240" y="1001.8828"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="108.5" x="246" y="1007.1494">QGraphicsTextItem * graphicsCost</text><line style="stroke:#181818;stroke-width:0.25;" x1="236.5" x2="402.5" y1="1010.6875" y2="1010.6875"/><ellipse cx="241.5" cy="1016.1875" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="116.5" x="246" y="1019.9541">Edge(Vertex *, Vertex *, int) noexcept</text><ellipse cx="241.5" cy="1024.9922" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="154" x="246" y="1028.7588">void PrepareToPaint(QPoint, QGraphicsScene *)</text><ellipse cx="241.5" cy="1033.7969" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="140" x="246" y="1037.5635">QPoint FindCostPos(QPoint) const noexcept</text><ellipse cx="241.5" cy="1042.6016" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="54" x="246" y="1046.3682">void Paint(QPen)</text><ellipse cx="241.5" cy="1051.4063" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="61" x="246" y="1055.1729">void SetPen(QPen)</text><ellipse cx="241.5" cy="1060.2109" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="64.5" x="246" y="1063.9775">void Hide() noexcept</text><ellipse cx="241.5" cy="1069.0156" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="67.5" x="246" y="1072.7822">void Show() noexcept</text><ellipse cx="241.5" cy="1077.8203" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="79.5" x="246" y="1081.5869">QString GetName() const</text></g><!--MD5=[0552be780b32b74e101a6b287ace92d8]
class TestingSystem--><g id="elem_TestingSystem"><rect codeLine="165" fill="#F1F1F1" height="182.4844" id="TestingSystem" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="168.5" x="964.75" y="287.5"/><ellipse cx="1023.625" cy="295.5" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1024.625,293.75 Q1024.7266,293.5 1024.8438,293.375 Q1024.9609,293.25 1025.0938,293.25 Q1025.3281,293.25 1025.4766,293.3906 Q1025.625,293.5313 1025.625,293.8594 L1025.625,294.6406 Q1025.625,294.9688 1025.4844,295.1094 Q1025.3438,295.25 1025.125,295.25 Q1024.9297,295.25 1024.8047,295.1641 Q1024.6797,295.0781 1024.625,294.8516 Q1024.6016,294.6953 1024.5156,294.6094 Q1024.3594,294.4453 1024.0781,294.3516 Q1023.7969,294.25 1023.5156,294.25 Q1023.1641,294.25 1022.8672,294.3906 Q1022.5781,294.5313 1022.3516,294.8438 Q1022.125,295.1563 1022.125,295.5859 L1022.125,296.0469 Q1022.125,296.5625 1022.5469,296.9063 Q1022.9688,297.25 1023.7188,297.25 Q1024.1641,297.25 1024.4766,297.1484 Q1024.6563,297.0938 1024.8594,296.9141 Q1024.9922,296.8125 1025.0625,296.7813 Q1025.1328,296.75 1025.2188,296.75 Q1025.3828,296.75 1025.5,296.8828 Q1025.625,297.0078 1025.625,297.1875 Q1025.625,297.3594 1025.4531,297.5625 Q1025.2031,297.8594 1024.8047,298.0234 Q1024.2813,298.25 1023.6406,298.25 Q1022.8906,298.25 1022.2891,297.9531 Q1021.8047,297.7188 1021.4609,297.2109 Q1021.125,296.7031 1021.125,296.1016 L1021.125,295.5547 Q1021.125,294.9297 1021.4219,294.3828 Q1021.7266,293.8359 1022.25,293.5469 Q1022.7813,293.25 1023.375,293.25 Q1023.7344,293.25 1024.0469,293.375 Q1024.3594,293.5 1024.625,293.75 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="46.5" x="1033.875" y="298.3643">TestingSystem</text><line style="stroke:#181818;stroke-width:0.25;" x1="965.25" x2="1132.75" y1="303.5" y2="303.5"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="307.5"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="68.5" x="974.75" y="312.7666">Ui::TestingSystem * ui</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="316.3047"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="148.5" x="974.75" y="321.5713">WelcomeToTesting * welcomeToTestingWidget</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="325.1094"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="95" x="974.75" y="330.376">TestingWidget * testingWidget</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="333.9141"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="99.5" x="974.75" y="339.1807">SessionStatWidget * statWidget</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="342.7188"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="155.5" x="974.75" y="347.9854">std::shared_ptr&lt;SessionStat&gt; currentSessionStat</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="351.5234"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="61" x="974.75" y="356.79">HtmlViewer * viewer</text><line style="stroke:#181818;stroke-width:0.25;" x1="965.25" x2="1132.75" y1="360.3281" y2="360.3281"/><ellipse cx="970.25" cy="365.8281" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="83.5" x="974.75" y="369.5947">TestingSystem(QWidget *)</text><ellipse cx="970.25" cy="374.6328" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="83.5" x="974.75" y="378.3994">~TestingSystem() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="974.75" y="387.2041"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="390.7422"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="148.5" x="974.75" y="396.0088">void showRef(const QString &amp; refSectionName)</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="974.75" y="404.8135"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="408.3516"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="123.5" x="974.75" y="413.6182">void on_openSettingsMenu_triggered()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="417.1563"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="93.5" x="974.75" y="422.4229">void on_statMenu_triggered()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="425.9609"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="131" x="974.75" y="431.2275">void startTest(const QString &amp; username)</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="434.7656"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="47.5" x="974.75" y="440.0322">void saveStat()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="443.5703"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="48.5" x="974.75" y="448.8369">void showStat()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="452.375"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="77.5" x="974.75" y="457.6416">void showTestingRules()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="968.75" y="461.1797"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="98" x="974.75" y="466.4463">void showEditQuestionsRules()</text></g><!--MD5=[fdd434793cb99c1279f7f837725d561d]
class QuestionWidget--><g id="elem_QuestionWidget"><rect codeLine="188" fill="#F1F1F1" height="120.8516" id="QuestionWidget" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="228.5" x="807.75" y="725.5"/><ellipse cx="894.625" cy="733.5" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M895.625,731.75 Q895.7266,731.5 895.8438,731.375 Q895.9609,731.25 896.0938,731.25 Q896.3281,731.25 896.4766,731.3906 Q896.625,731.5313 896.625,731.8594 L896.625,732.6406 Q896.625,732.9688 896.4844,733.1094 Q896.3438,733.25 896.125,733.25 Q895.9297,733.25 895.8047,733.1641 Q895.6797,733.0781 895.625,732.8516 Q895.6016,732.6953 895.5156,732.6094 Q895.3594,732.4453 895.0781,732.3516 Q894.7969,732.25 894.5156,732.25 Q894.1641,732.25 893.8672,732.3906 Q893.5781,732.5313 893.3516,732.8438 Q893.125,733.1563 893.125,733.5859 L893.125,734.0469 Q893.125,734.5625 893.5469,734.9063 Q893.9688,735.25 894.7188,735.25 Q895.1641,735.25 895.4766,735.1484 Q895.6563,735.0938 895.8594,734.9141 Q895.9922,734.8125 896.0625,734.7813 Q896.1328,734.75 896.2188,734.75 Q896.3828,734.75 896.5,734.8828 Q896.625,735.0078 896.625,735.1875 Q896.625,735.3594 896.4531,735.5625 Q896.2031,735.8594 895.8047,736.0234 Q895.2813,736.25 894.6406,736.25 Q893.8906,736.25 893.2891,735.9531 Q892.8047,735.7188 892.4609,735.2109 Q892.125,734.7031 892.125,734.1016 L892.125,733.5547 Q892.125,732.9297 892.4219,732.3828 Q892.7266,731.8359 893.25,731.5469 Q893.7813,731.25 894.375,731.25 Q894.7344,731.25 895.0469,731.375 Q895.3594,731.5 895.625,731.75 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="50.5" x="904.875" y="736.3643">QuestionWidget</text><line style="stroke:#181818;stroke-width:0.25;" x1="808.25" x2="1035.75" y1="741.5" y2="741.5"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="811.75" y="745.5"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="72.5" x="817.75" y="750.7666">Ui::QuestionWidget * ui</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="811.75" y="754.3047"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="117" x="817.75" y="759.5713">QTextBrowser * questionTextBrowser</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="811.75" y="763.1094"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="100" x="817.75" y="768.376">shared_ptr&lt;Question&gt; question</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="811.75" y="771.9141"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="136" x="817.75" y="777.1807">vector&lt;QCheckBox *&gt; answersCheckBoxes</text><line style="stroke:#181818;stroke-width:0.25;" x1="808.25" x2="1035.75" y1="780.7188" y2="780.7188"/><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="811.75" y="784.7188"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="60.5" x="817.75" y="789.9854">void formAnswers()</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="817.75" y="798.79"> </text><ellipse cx="813.25" cy="803.8281" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="215.5" x="817.75" y="807.5947">QuestionWidget(shared_ptr&lt;Question&gt;, QWidget *, QTextBrowser *)</text><ellipse cx="813.25" cy="812.6328" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="87.5" x="817.75" y="816.3994">~QuestionWidget() override</text><ellipse cx="813.25" cy="821.4375" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="43" x="817.75" y="825.2041">void Display()</text><ellipse cx="813.25" cy="830.2422" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="52.5" x="817.75" y="834.0088">int RateAnswer()</text><ellipse cx="813.25" cy="839.0469" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="118" x="817.75" y="842.8135">shared_ptr&lt;Question&gt; GetQuestion()</text></g><!--MD5=[4c132c05efdf973d45c774e712e5199c]
class TestingWidget--><g id="elem_TestingWidget"><rect codeLine="294" fill="#F1F1F1" height="156.0703" id="TestingWidget" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="193" x="884" y="500"/><ellipse cx="955.625" cy="508" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M956.625,506.25 Q956.7266,506 956.8438,505.875 Q956.9609,505.75 957.0938,505.75 Q957.3281,505.75 957.4766,505.8906 Q957.625,506.0313 957.625,506.3594 L957.625,507.1406 Q957.625,507.4688 957.4844,507.6094 Q957.3438,507.75 957.125,507.75 Q956.9297,507.75 956.8047,507.6641 Q956.6797,507.5781 956.625,507.3516 Q956.6016,507.1953 956.5156,507.1094 Q956.3594,506.9453 956.0781,506.8516 Q955.7969,506.75 955.5156,506.75 Q955.1641,506.75 954.8672,506.8906 Q954.5781,507.0313 954.3516,507.3438 Q954.125,507.6563 954.125,508.0859 L954.125,508.5469 Q954.125,509.0625 954.5469,509.4063 Q954.9688,509.75 955.7188,509.75 Q956.1641,509.75 956.4766,509.6484 Q956.6563,509.5938 956.8594,509.4141 Q956.9922,509.3125 957.0625,509.2813 Q957.1328,509.25 957.2188,509.25 Q957.3828,509.25 957.5,509.3828 Q957.625,509.5078 957.625,509.6875 Q957.625,509.8594 957.4531,510.0625 Q957.2031,510.3594 956.8047,510.5234 Q956.2813,510.75 955.6406,510.75 Q954.8906,510.75 954.2891,510.4531 Q953.8047,510.2188 953.4609,509.7109 Q953.125,509.2031 953.125,508.6016 L953.125,508.0547 Q953.125,507.4297 953.4219,506.8828 Q953.7266,506.3359 954.25,506.0469 Q954.7813,505.75 955.375,505.75 Q955.7344,505.75 956.0469,505.875 Q956.3594,506 956.625,506.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="45.5" x="965.875" y="510.8643">TestingWidget</text><line style="stroke:#181818;stroke-width:0.25;" x1="884.5" x2="1076.5" y1="516" y2="516"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="520"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="67.5" x="894" y="525.2666">Ui::TestingWidget * ui</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="528.8047"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="60.5" x="894" y="534.0713">int currentQuestion</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="537.6094"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="72.5" x="894" y="542.876">int amountOfQuestions</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="546.4141"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="180" x="894" y="551.6807">std::vector&lt;std::shared_ptr&lt;QuestionWidget&gt;&gt; questions</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="555.2188"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="155.5" x="894" y="560.4854">std::shared_ptr&lt;SessionStat&gt; currentSessionStat</text><line style="stroke:#181818;stroke-width:0.25;" x1="884.5" x2="1076.5" y1="564.0234" y2="564.0234"/><ellipse cx="889.5" cy="569.5234" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="180" x="894" y="573.29">TestingWidget(std::shared_ptr&lt;SessionStat&gt;, QWidget *)</text><ellipse cx="889.5" cy="578.3281" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="82.5" x="894" y="582.0947">~TestingWidget() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="894" y="590.8994"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="594.4375"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="66.5" x="894" y="599.7041">void readQuestions()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="603.2422"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="94.5" x="894" y="608.5088">void displayCurrentQuestion()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="612.0469"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="128.5" x="894" y="617.3135">void closeEvent(QCloseEvent *) override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="894" y="626.1182"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="629.6563"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="40.5" x="894" y="634.9229">void closed()</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="894" y="643.7275"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="888" y="647.2656"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="100.5" x="894" y="652.5322">void on_answerButton_clicked()</text></g><!--MD5=[e6494f7027ee119b87f8f5a248b6d22e]
class Complexity--><g id="elem_Complexity"><rect codeLine="203" fill="#F1F1F1" height="50.4141" id="Complexity" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="50" x="679.5" y="977.5"/><ellipse cx="687" cy="985.5" fill="#EB937F" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M686.25,986 L686.25,987 L688.25,987 L688.25,986.5 L688.25,986.2578 L688.5625,986 L688.75,986 L688.9375,986 L689.25,986.2578 L689.25,986.5 L689.25,988 L685.25,988 L685.0078,988 L684.75,987.6875 L684.75,987.5 L684.75,987.3125 L685.0078,987 L685.25,987 L685.25,987 L685.25,984 L685.25,984 L685.0078,984 L684.75,983.6875 L684.75,983.5 L684.75,983.3125 L685.0078,983 L685.25,983 L689.25,983 L689.25,984.5 L689.25,984.7422 L688.9375,985 L688.75,985 L688.5625,985 L688.25,984.7422 L688.25,984.5 L688.25,984 L686.25,984 L686.25,985 L686.75,985 L686.75,984.7578 L686.75,984.7578 L687.0625,984.5 L687.25,984.5 L687.4375,984.5 L687.75,984.7578 L687.75,985 L687.75,986 L687.75,986.2422 L687.4375,986.5 L687.4375,986.5 L687.25,986.5 L687.0625,986.5 L686.75,986.2422 L686.75,986.2422 L686.75,986 L686.25,986 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="34" x="694" y="988.3643">Complexity</text><line style="stroke:#181818;stroke-width:0.25;" x1="680" x2="729" y1="993.5" y2="993.5"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="20" x="682.5" y="1002.7666">simple</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="24.5" x="682.5" y="1011.5713">medium</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="14.5" x="682.5" y="1020.376">hard</text><line style="stroke:#181818;stroke-width:0.25;" x1="680" x2="729" y1="1023.9141" y2="1023.9141"/></g><!--MD5=[fc7123defb831ecdd44b2d9bcef6cceb]
class Question--><g id="elem_Question"><rect codeLine="208" fill="#F1F1F1" height="120.8516" id="Question" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="220" x="747" y="942.25"/><ellipse cx="840.625" cy="950.25" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M841.625,948.5 Q841.7266,948.25 841.8438,948.125 Q841.9609,948 842.0938,948 Q842.3281,948 842.4766,948.1406 Q842.625,948.2813 842.625,948.6094 L842.625,949.3906 Q842.625,949.7188 842.4844,949.8594 Q842.3438,950 842.125,950 Q841.9297,950 841.8047,949.9141 Q841.6797,949.8281 841.625,949.6016 Q841.6016,949.4453 841.5156,949.3594 Q841.3594,949.1953 841.0781,949.1016 Q840.7969,949 840.5156,949 Q840.1641,949 839.8672,949.1406 Q839.5781,949.2813 839.3516,949.5938 Q839.125,949.9063 839.125,950.3359 L839.125,950.7969 Q839.125,951.3125 839.5469,951.6563 Q839.9688,952 840.7188,952 Q841.1641,952 841.4766,951.8984 Q841.6563,951.8438 841.8594,951.6641 Q841.9922,951.5625 842.0625,951.5313 Q842.1328,951.5 842.2188,951.5 Q842.3828,951.5 842.5,951.6328 Q842.625,951.7578 842.625,951.9375 Q842.625,952.1094 842.4531,952.3125 Q842.2031,952.6094 841.8047,952.7734 Q841.2813,953 840.6406,953 Q839.8906,953 839.2891,952.7031 Q838.8047,952.4688 838.4609,951.9609 Q838.125,951.4531 838.125,950.8516 L838.125,950.3047 Q838.125,949.6797 838.4219,949.1328 Q838.7266,948.5859 839.25,948.2969 Q839.7813,948 840.375,948 Q840.7344,948 841.0469,948.125 Q841.3594,948.25 841.625,948.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="28.5" x="850.875" y="953.1143">Question</text><line style="stroke:#181818;stroke-width:0.25;" x1="747.5" x2="966.5" y1="958.25" y2="958.25"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="751" y="962.25"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="53" x="757" y="967.5166">QString question</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="751" y="971.0547"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="68.5" x="757" y="976.3213">Complexity complexity</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="751" y="979.8594"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="79.5" x="757" y="985.126">vector&lt;QString&gt; answers</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="751" y="988.6641"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="75.5" x="757" y="993.9307">set&lt;int&gt; correctAnswers</text><line style="stroke:#181818;stroke-width:0.25;" x1="747.5" x2="966.5" y1="997.4688" y2="997.4688"/><ellipse cx="752.5" cy="1002.9688" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="33.5" x="757" y="1006.7354">Question()</text><ellipse cx="752.5" cy="1011.7734" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="207" x="757" y="1015.54">Question(QString, std::vector&lt;QString&gt;, std::set&lt;int&gt;, Complexity)</text><ellipse cx="752.5" cy="1020.5781" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="74" x="757" y="1024.3447">Question(QJsonObject)</text><ellipse cx="752.5" cy="1029.3828" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="140.5" x="757" y="1033.1494">int RateAnswer(std::set&lt;int&gt;) const noexcept</text><ellipse cx="752.5" cy="1038.1875" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="120.5" x="757" y="1041.9541">QString GetQuestion() const noexcept</text><ellipse cx="752.5" cy="1046.9922" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="146" x="757" y="1050.7588">vector&lt;QString&gt; GetAnswers() const noexcept</text><ellipse cx="752.5" cy="1055.7969" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="136" x="757" y="1059.5635">Complexity GetComplexity() const noexcept</text></g><!--MD5=[aed085e83fb98baceb7c0da02979dfdd]
class SessionStatWidget--><g id="elem_SessionStatWidget"><rect codeLine="225" fill="#F1F1F1" height="76.8281" id="SessionStatWidget" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="193.5" x="952.25" y="171.75"/><ellipse cx="1017.125" cy="179.75" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1018.125,178 Q1018.2266,177.75 1018.3438,177.625 Q1018.4609,177.5 1018.5938,177.5 Q1018.8281,177.5 1018.9766,177.6406 Q1019.125,177.7813 1019.125,178.1094 L1019.125,178.8906 Q1019.125,179.2188 1018.9844,179.3594 Q1018.8438,179.5 1018.625,179.5 Q1018.4297,179.5 1018.3047,179.4141 Q1018.1797,179.3281 1018.125,179.1016 Q1018.1016,178.9453 1018.0156,178.8594 Q1017.8594,178.6953 1017.5781,178.6016 Q1017.2969,178.5 1017.0156,178.5 Q1016.6641,178.5 1016.3672,178.6406 Q1016.0781,178.7813 1015.8516,179.0938 Q1015.625,179.4063 1015.625,179.8359 L1015.625,180.2969 Q1015.625,180.8125 1016.0469,181.1563 Q1016.4688,181.5 1017.2188,181.5 Q1017.6641,181.5 1017.9766,181.3984 Q1018.1563,181.3438 1018.3594,181.1641 Q1018.4922,181.0625 1018.5625,181.0313 Q1018.6328,181 1018.7188,181 Q1018.8828,181 1019,181.1328 Q1019.125,181.2578 1019.125,181.4375 Q1019.125,181.6094 1018.9531,181.8125 Q1018.7031,182.1094 1018.3047,182.2734 Q1017.7813,182.5 1017.1406,182.5 Q1016.3906,182.5 1015.7891,182.2031 Q1015.3047,181.9688 1014.9609,181.4609 Q1014.625,180.9531 1014.625,180.3516 L1014.625,179.8047 Q1014.625,179.1797 1014.9219,178.6328 Q1015.2266,178.0859 1015.75,177.7969 Q1016.2813,177.5 1016.875,177.5 Q1017.2344,177.5 1017.5469,177.625 Q1017.8594,177.75 1018.125,178 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="59.5" x="1027.375" y="182.6143">SessionStatWidget</text><line style="stroke:#181818;stroke-width:0.25;" x1="952.75" x2="1145.25" y1="187.75" y2="187.75"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="956.25" y="191.75"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="81.5" x="962.25" y="197.0166">Ui::SessionStatWidget * ui</text><line style="stroke:#181818;stroke-width:0.25;" x1="952.75" x2="1145.25" y1="200.5547" y2="200.5547"/><ellipse cx="957.75" cy="206.0547" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="180.5" x="962.25" y="209.8213">SessionStatWidget(shared_ptr&lt;SessionStat&gt;, QWidget *)</text><ellipse cx="957.75" cy="214.8594" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="96.5" x="962.25" y="218.626">~SessionStatWidget() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="962.25" y="227.4307"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="956.25" y="230.9688"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="128.5" x="962.25" y="236.2354">void closeEvent(QCloseEvent *) override</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="956.25" y="239.7734"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="40.5" x="962.25" y="245.04">void closed()</text></g><!--MD5=[ba4dd299f2beba1110c8355596814fba]
class StatDatabaseViewWidget--><g id="elem_StatDatabaseViewWidget"><rect codeLine="236" fill="#F1F1F1" height="129.6563" id="StatDatabaseViewWidget" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="217" x="1094.5" y="513.25"/><ellipse cx="1161.125" cy="521.25" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1162.125,519.5 Q1162.2266,519.25 1162.3438,519.125 Q1162.4609,519 1162.5938,519 Q1162.8281,519 1162.9766,519.1406 Q1163.125,519.2813 1163.125,519.6094 L1163.125,520.3906 Q1163.125,520.7188 1162.9844,520.8594 Q1162.8438,521 1162.625,521 Q1162.4297,521 1162.3047,520.9141 Q1162.1797,520.8281 1162.125,520.6016 Q1162.1016,520.4453 1162.0156,520.3594 Q1161.8594,520.1953 1161.5781,520.1016 Q1161.2969,520 1161.0156,520 Q1160.6641,520 1160.3672,520.1406 Q1160.0781,520.2813 1159.8516,520.5938 Q1159.625,520.9063 1159.625,521.3359 L1159.625,521.7969 Q1159.625,522.3125 1160.0469,522.6563 Q1160.4688,523 1161.2188,523 Q1161.6641,523 1161.9766,522.8984 Q1162.1563,522.8438 1162.3594,522.6641 Q1162.4922,522.5625 1162.5625,522.5313 Q1162.6328,522.5 1162.7188,522.5 Q1162.8828,522.5 1163,522.6328 Q1163.125,522.7578 1163.125,522.9375 Q1163.125,523.1094 1162.9531,523.3125 Q1162.7031,523.6094 1162.3047,523.7734 Q1161.7813,524 1161.1406,524 Q1160.3906,524 1159.7891,523.7031 Q1159.3047,523.4688 1158.9609,522.9609 Q1158.625,522.4531 1158.625,521.8516 L1158.625,521.3047 Q1158.625,520.6797 1158.9219,520.1328 Q1159.2266,519.5859 1159.75,519.2969 Q1160.2813,519 1160.875,519 Q1161.2344,519 1161.5469,519.125 Q1161.8594,519.25 1162.125,519.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="79.5" x="1171.375" y="524.1143">StatDatabaseViewWidget</text><line style="stroke:#181818;stroke-width:0.25;" x1="1095" x2="1311" y1="529.25" y2="529.25"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1098.5" y="533.25"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="101.5" x="1104.5" y="538.5166">Ui::StatDatabaseViewWidget * ui</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1098.5" y="542.0547"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="60.5" x="1104.5" y="547.3213">QSqlDatabase * db</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1098.5" y="550.8594"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="78" x="1104.5" y="556.126">QSqlTableModel * model</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1098.5" y="559.6641"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="204" x="1104.5" y="564.9307">std::list&lt;std::unique_ptr&lt;StatDatabaseViewOption&gt;&gt; filterOptions</text><line style="stroke:#181818;stroke-width:0.25;" x1="1095" x2="1311" y1="568.4688" y2="568.4688"/><ellipse cx="1100" cy="573.9688" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="144.5" x="1104.5" y="577.7354">StatDatabaseViewWidget(QString, QWidget *)</text><ellipse cx="1100" cy="582.7734" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="116.5" x="1104.5" y="586.54">~StatDatabaseViewWidget() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="1104.5" y="595.3447"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1098.5" y="598.8828"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="72.5" x="1104.5" y="604.1494">void addFilterOptions()</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="1104.5" y="612.9541"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1098.5" y="616.4922"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="94" x="1104.5" y="621.7588">void on_showButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1098.5" y="625.2969"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="109.5" x="1104.5" y="630.5635">void on_clearFilterButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1098.5" y="634.1016"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="123" x="1104.5" y="639.3682">void changeParametersFields(QString)</text></g><!--MD5=[120659a3d503d31b3febc1bbb6b0e5dc]
class StatError--><g id="elem_StatError"><rect codeLine="253" fill="#F1F1F1" height="32.8047" id="StatError" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="77.5" x="651.25" y="769.5"/><ellipse cx="673.625" cy="777.5" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M674.625,775.75 Q674.7266,775.5 674.8438,775.375 Q674.9609,775.25 675.0938,775.25 Q675.3281,775.25 675.4766,775.3906 Q675.625,775.5313 675.625,775.8594 L675.625,776.6406 Q675.625,776.9688 675.4844,777.1094 Q675.3438,777.25 675.125,777.25 Q674.9297,777.25 674.8047,777.1641 Q674.6797,777.0781 674.625,776.8516 Q674.6016,776.6953 674.5156,776.6094 Q674.3594,776.4453 674.0781,776.3516 Q673.7969,776.25 673.5156,776.25 Q673.1641,776.25 672.8672,776.3906 Q672.5781,776.5313 672.3516,776.8438 Q672.125,777.1563 672.125,777.5859 L672.125,778.0469 Q672.125,778.5625 672.5469,778.9063 Q672.9688,779.25 673.7188,779.25 Q674.1641,779.25 674.4766,779.1484 Q674.6563,779.0938 674.8594,778.9141 Q674.9922,778.8125 675.0625,778.7813 Q675.1328,778.75 675.2188,778.75 Q675.3828,778.75 675.5,778.8828 Q675.625,779.0078 675.625,779.1875 Q675.625,779.3594 675.4531,779.5625 Q675.2031,779.8594 674.8047,780.0234 Q674.2813,780.25 673.6406,780.25 Q672.8906,780.25 672.2891,779.9531 Q671.8047,779.7188 671.4609,779.2109 Q671.125,778.7031 671.125,778.1016 L671.125,777.5547 Q671.125,776.9297 671.4219,776.3828 Q671.7266,775.8359 672.25,775.5469 Q672.7813,775.25 673.375,775.25 Q673.7344,775.25 674.0469,775.375 Q674.3594,775.5 674.625,775.75 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="28.5" x="683.875" y="780.3643">StatError</text><line style="stroke:#181818;stroke-width:0.25;" x1="651.75" x2="728.25" y1="785.5" y2="785.5"/><line style="stroke:#181818;stroke-width:0.25;" x1="651.75" x2="728.25" y1="789.5" y2="789.5"/><ellipse cx="656.75" cy="795" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="64.5" x="661.25" y="798.7666">StatError(std::string)</text></g><!--MD5=[b8cfd8c4119a3b0a7a46bfc5fc780f85]
class Error--><g id="elem_Error"><rect codeLine="352" fill="#F1F1F1" height="68.0234" id="Error" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="104.5" x="761.75" y="544"/><ellipse cx="803.875" cy="552" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M804.875,550.25 Q804.9766,550 805.0938,549.875 Q805.2109,549.75 805.3438,549.75 Q805.5781,549.75 805.7266,549.8906 Q805.875,550.0313 805.875,550.3594 L805.875,551.1406 Q805.875,551.4688 805.7344,551.6094 Q805.5938,551.75 805.375,551.75 Q805.1797,551.75 805.0547,551.6641 Q804.9297,551.5781 804.875,551.3516 Q804.8516,551.1953 804.7656,551.1094 Q804.6094,550.9453 804.3281,550.8516 Q804.0469,550.75 803.7656,550.75 Q803.4141,550.75 803.1172,550.8906 Q802.8281,551.0313 802.6016,551.3438 Q802.375,551.6563 802.375,552.0859 L802.375,552.5469 Q802.375,553.0625 802.7969,553.4063 Q803.2188,553.75 803.9688,553.75 Q804.4141,553.75 804.7266,553.6484 Q804.9063,553.5938 805.1094,553.4141 Q805.2422,553.3125 805.3125,553.2813 Q805.3828,553.25 805.4688,553.25 Q805.6328,553.25 805.75,553.3828 Q805.875,553.5078 805.875,553.6875 Q805.875,553.8594 805.7031,554.0625 Q805.4531,554.3594 805.0547,554.5234 Q804.5313,554.75 803.8906,554.75 Q803.1406,554.75 802.5391,554.4531 Q802.0547,554.2188 801.7109,553.7109 Q801.375,553.2031 801.375,552.6016 L801.375,552.0547 Q801.375,551.4297 801.6719,550.8828 Q801.9766,550.3359 802.5,550.0469 Q803.0313,549.75 803.625,549.75 Q803.9844,549.75 804.2969,549.875 Q804.6094,550 804.875,550.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="16" x="814.125" y="554.8643">Error</text><line style="stroke:#181818;stroke-width:0.25;" x1="762.25" x2="865.75" y1="560" y2="560"/><polygon fill="none" points="767.25,563,769.25,565,767.25,567,765.25,565" style="stroke:#B38D22;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="47.5" x="771.75" y="569.2666">std::string what</text><line style="stroke:#181818;stroke-width:0.25;" x1="762.25" x2="865.75" y1="572.8047" y2="572.8047"/><ellipse cx="767.25" cy="578.3047" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="21" x="771.75" y="582.0713">Error()</text><ellipse cx="767.25" cy="587.1094" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="91.5" x="771.75" y="590.876">Error(const std::string &amp; what</text><ellipse cx="767.25" cy="595.9141" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="54.5" x="771.75" y="599.6807">std::string What()</text><ellipse cx="767.25" cy="604.7188" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="37" x="771.75" y="608.4854">void Show()</text></g><!--MD5=[999cb500673b47044521dbc19018a652]
class SessionStat--><g id="elem_SessionStat"><rect codeLine="259" fill="#F1F1F1" height="147.2656" id="SessionStat" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="231" x="513" y="504.25"/><ellipse cx="607.625" cy="512.25" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M608.625,510.5 Q608.7266,510.25 608.8438,510.125 Q608.9609,510 609.0938,510 Q609.3281,510 609.4766,510.1406 Q609.625,510.2813 609.625,510.6094 L609.625,511.3906 Q609.625,511.7188 609.4844,511.8594 Q609.3438,512 609.125,512 Q608.9297,512 608.8047,511.9141 Q608.6797,511.8281 608.625,511.6016 Q608.6016,511.4453 608.5156,511.3594 Q608.3594,511.1953 608.0781,511.1016 Q607.7969,511 607.5156,511 Q607.1641,511 606.8672,511.1406 Q606.5781,511.2813 606.3516,511.5938 Q606.125,511.9063 606.125,512.3359 L606.125,512.7969 Q606.125,513.3125 606.5469,513.6563 Q606.9688,514 607.7188,514 Q608.1641,514 608.4766,513.8984 Q608.6563,513.8438 608.8594,513.6641 Q608.9922,513.5625 609.0625,513.5313 Q609.1328,513.5 609.2188,513.5 Q609.3828,513.5 609.5,513.6328 Q609.625,513.7578 609.625,513.9375 Q609.625,514.1094 609.4531,514.3125 Q609.2031,514.6094 608.8047,514.7734 Q608.2813,515 607.6406,515 Q606.8906,515 606.2891,514.7031 Q605.8047,514.4688 605.4609,513.9609 Q605.125,513.4531 605.125,512.8516 L605.125,512.3047 Q605.125,511.6797 605.4219,511.1328 Q605.7266,510.5859 606.25,510.2969 Q606.7813,510 607.375,510 Q607.7344,510 608.0469,510.125 Q608.3594,510.25 608.625,510.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="37.5" x="617.875" y="515.1143">SessionStat</text><line style="stroke:#181818;stroke-width:0.25;" x1="513.5" x2="743.5" y1="520.25" y2="520.25"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="517" y="524.25"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="57.5" x="523" y="529.5166">QString username</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="517" y="533.0547"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="67.5" x="523" y="538.3213">QDateTime startTime</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="517" y="541.8594"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="70" x="523" y="547.126">QDateTime finishTime</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="517" y="550.6641"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="218" x="523" y="555.9307">std::vector&lt;std::pair&lt;std::shared_ptr&lt;Question&gt;, int&gt;&gt; questionsRate</text><line style="stroke:#181818;stroke-width:0.25;" x1="513.5" x2="743.5" y1="559.4688" y2="559.4688"/><ellipse cx="518.5" cy="564.9688" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="66.5" x="523" y="568.7354">SessionStat(QString)</text><ellipse cx="518.5" cy="573.7734" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="202.5" x="523" y="577.54">void AddQuestionRate(std::shared_ptr&lt;Question&gt;, int) noexcept</text><ellipse cx="518.5" cy="582.5781" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="60" x="523" y="586.3447">void Save(QString)</text><ellipse cx="518.5" cy="591.3828" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="90.5" x="523" y="595.1494">QString ToHtmlString() const</text><ellipse cx="518.5" cy="600.1875" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="97" x="523" y="603.9541">void SetStartTime(QDateTime)</text><ellipse cx="518.5" cy="608.9922" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="101" x="523" y="612.7588">void SetFinishTime(QDateTime)</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="523" y="621.5635"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="517" y="625.1016"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="179" x="523" y="630.3682">static QTime duration(QDateTime, QDateTime) noexcept</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="517" y="633.9063"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="121.5" x="523" y="639.1729">int calculateUserRate() const noexcept</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="517" y="642.7109"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="119.5" x="523" y="647.9775">int calculateMaxRate() const noexcept</text></g><!--MD5=[dc6ebb2100f70c6f32e884bf179ffe61]
class WelcomeToTesting--><g id="elem_WelcomeToTesting"><rect codeLine="279" fill="#F1F1F1" height="112.0469" id="WelcomeToTesting" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="148.5" x="798.75" y="322.75"/><ellipse cx="840.375" cy="330.75" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M841.375,329 Q841.4766,328.75 841.5938,328.625 Q841.7109,328.5 841.8438,328.5 Q842.0781,328.5 842.2266,328.6406 Q842.375,328.7813 842.375,329.1094 L842.375,329.8906 Q842.375,330.2188 842.2344,330.3594 Q842.0938,330.5 841.875,330.5 Q841.6797,330.5 841.5547,330.4141 Q841.4297,330.3281 841.375,330.1016 Q841.3516,329.9453 841.2656,329.8594 Q841.1094,329.6953 840.8281,329.6016 Q840.5469,329.5 840.2656,329.5 Q839.9141,329.5 839.6172,329.6406 Q839.3281,329.7813 839.1016,330.0938 Q838.875,330.4063 838.875,330.8359 L838.875,331.2969 Q838.875,331.8125 839.2969,332.1563 Q839.7188,332.5 840.4688,332.5 Q840.9141,332.5 841.2266,332.3984 Q841.4063,332.3438 841.6094,332.1641 Q841.7422,332.0625 841.8125,332.0313 Q841.8828,332 841.9688,332 Q842.1328,332 842.25,332.1328 Q842.375,332.2578 842.375,332.4375 Q842.375,332.6094 842.2031,332.8125 Q841.9531,333.1094 841.5547,333.2734 Q841.0313,333.5 840.3906,333.5 Q839.6406,333.5 839.0391,333.2031 Q838.5547,332.9688 838.2109,332.4609 Q837.875,331.9531 837.875,331.3516 L837.875,330.8047 Q837.875,330.1797 838.1719,329.6328 Q838.4766,329.0859 839,328.7969 Q839.5313,328.5 840.125,328.5 Q840.4844,328.5 840.7969,328.625 Q841.1094,328.75 841.375,329 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="61" x="850.625" y="333.6143">WelcomeToTesting</text><line style="stroke:#181818;stroke-width:0.25;" x1="799.25" x2="946.75" y1="338.75" y2="338.75"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="802.75" y="342.75"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="83" x="808.75" y="348.0166">Ui::WelcomeToTesting * ui</text><line style="stroke:#181818;stroke-width:0.25;" x1="799.25" x2="946.75" y1="351.5547" y2="351.5547"/><ellipse cx="804.25" cy="357.0547" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="98" x="808.75" y="360.8213">WelcomeToTesting(QWidget *)</text><ellipse cx="804.25" cy="365.8594" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="98" x="808.75" y="369.626">~WelcomeToTesting() override</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="808.75" y="378.4307"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="802.75" y="381.9688"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="128.5" x="808.75" y="387.2354">void closeEvent(QCloseEvent *) override</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="802.75" y="390.7734"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="98" x="808.75" y="396.04">void closed(QString username)</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="802.75" y="399.5781"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="102.5" x="808.75" y="404.8447">void testingRulesButtonClicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="802.75" y="408.3828"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="115.5" x="808.75" y="413.6494">void on_startTestingButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="802.75" y="417.1875"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="133" x="808.75" y="422.4541">void on_usernameLineEdit_textChanged()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="802.75" y="425.9922"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="135.5" x="808.75" y="431.2588">void on_showTestingRulesButton_clicked()</text></g><!--MD5=[f60322b24aee0497b00142c9dc707f37]
class StatDatabaseViewOption--><g id="elem_StatDatabaseViewOption"><rect codeLine="314" fill="#F1F1F1" height="85.6328" id="StatDatabaseViewOption" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="287.5" x="1117.75" y="743.25"/><ellipse cx="1220.125" cy="751.25" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1221.125,749.5 Q1221.2266,749.25 1221.3438,749.125 Q1221.4609,749 1221.5938,749 Q1221.8281,749 1221.9766,749.1406 Q1222.125,749.2813 1222.125,749.6094 L1222.125,750.3906 Q1222.125,750.7188 1221.9844,750.8594 Q1221.8438,751 1221.625,751 Q1221.4297,751 1221.3047,750.9141 Q1221.1797,750.8281 1221.125,750.6016 Q1221.1016,750.4453 1221.0156,750.3594 Q1220.8594,750.1953 1220.5781,750.1016 Q1220.2969,750 1220.0156,750 Q1219.6641,750 1219.3672,750.1406 Q1219.0781,750.2813 1218.8516,750.5938 Q1218.625,750.9063 1218.625,751.3359 L1218.625,751.7969 Q1218.625,752.3125 1219.0469,752.6563 Q1219.4688,753 1220.2188,753 Q1220.6641,753 1220.9766,752.8984 Q1221.1563,752.8438 1221.3594,752.6641 Q1221.4922,752.5625 1221.5625,752.5313 Q1221.6328,752.5 1221.7188,752.5 Q1221.8828,752.5 1222,752.6328 Q1222.125,752.7578 1222.125,752.9375 Q1222.125,753.1094 1221.9531,753.3125 Q1221.7031,753.6094 1221.3047,753.7734 Q1220.7813,754 1220.1406,754 Q1219.3906,754 1218.7891,753.7031 Q1218.3047,753.4688 1217.9609,752.9609 Q1217.625,752.4531 1217.625,751.8516 L1217.625,751.3047 Q1217.625,750.6797 1217.9219,750.1328 Q1218.2266,749.5859 1218.75,749.2969 Q1219.2813,749 1219.875,749 Q1220.2344,749 1220.5469,749.125 Q1220.8594,749.25 1221.125,749.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="78.5" x="1230.375" y="754.1143">StatDatabaseViewOption</text><line style="stroke:#181818;stroke-width:0.25;" x1="1118.25" x2="1404.75" y1="759.25" y2="759.25"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1121.75" y="763.25"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="110.5" x="1127.75" y="768.5166">const std::vector&lt;QWidget *&gt; fields</text><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1121.75" y="772.0547"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="82.5" x="1127.75" y="777.3213">const QString optionName</text><line style="stroke:#181818;stroke-width:0.25;" x1="1118.25" x2="1404.75" y1="780.8594" y2="780.8594"/><ellipse cx="1123.25" cy="786.3594" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="274.5" x="1127.75" y="790.126">StatDatabaseViewOption(const QString &amp; optionName, std::vector&lt;QWidget *&gt; &amp; fields)</text><ellipse cx="1123.25" cy="795.1641" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="120.5" x="1127.75" y="798.9307">virtual ~StatDatabaseViewOption() = 0</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="1127.75" y="807.7354"> </text><ellipse cx="1123.25" cy="812.7734" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="109.5" x="1127.75" y="816.54">void SetFieldsVisibility(bool visible)</text><ellipse cx="1123.25" cy="821.5781" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="110" x="1127.75" y="825.3447">QString GetName() const noexcept</text></g><!--MD5=[99a4d26a52613e831fb53c94dd661966]
class UsernameOption--><g id="elem_UsernameOption"><rect codeLine="326" fill="#F1F1F1" height="41.6094" id="UsernameOption" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="169" x="984.5" y="982"/><ellipse cx="1040.375" cy="990" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1041.375,988.25 Q1041.4766,988 1041.5938,987.875 Q1041.7109,987.75 1041.8438,987.75 Q1042.0781,987.75 1042.2266,987.8906 Q1042.375,988.0313 1042.375,988.3594 L1042.375,989.1406 Q1042.375,989.4688 1042.2344,989.6094 Q1042.0938,989.75 1041.875,989.75 Q1041.6797,989.75 1041.5547,989.6641 Q1041.4297,989.5781 1041.375,989.3516 Q1041.3516,989.1953 1041.2656,989.1094 Q1041.1094,988.9453 1040.8281,988.8516 Q1040.5469,988.75 1040.2656,988.75 Q1039.9141,988.75 1039.6172,988.8906 Q1039.3281,989.0313 1039.1016,989.3438 Q1038.875,989.6563 1038.875,990.0859 L1038.875,990.5469 Q1038.875,991.0625 1039.2969,991.4063 Q1039.7188,991.75 1040.4688,991.75 Q1040.9141,991.75 1041.2266,991.6484 Q1041.4063,991.5938 1041.6094,991.4141 Q1041.7422,991.3125 1041.8125,991.2813 Q1041.8828,991.25 1041.9688,991.25 Q1042.1328,991.25 1042.25,991.3828 Q1042.375,991.5078 1042.375,991.6875 Q1042.375,991.8594 1042.2031,992.0625 Q1041.9531,992.3594 1041.5547,992.5234 Q1041.0313,992.75 1040.3906,992.75 Q1039.6406,992.75 1039.0391,992.4531 Q1038.5547,992.2188 1038.2109,991.7109 Q1037.875,991.2031 1037.875,990.6016 L1037.875,990.0547 Q1037.875,989.4297 1038.1719,988.8828 Q1038.4766,988.3359 1039,988.0469 Q1039.5313,987.75 1040.125,987.75 Q1040.4844,987.75 1040.7969,987.875 Q1041.1094,988 1041.375,988.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="53" x="1050.625" y="992.8643">UsernameOption</text><line style="stroke:#181818;stroke-width:0.25;" x1="985" x2="1153" y1="998" y2="998"/><line style="stroke:#181818;stroke-width:0.25;" x1="985" x2="1153" y1="1002" y2="1002"/><ellipse cx="990" cy="1007.5" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="156" x="994.5" y="1011.2666">UsernameOption(std::vector&lt;QWidget *&gt; &amp; fields)</text><ellipse cx="990" cy="1016.3047" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="77" x="994.5" y="1020.0713">~UsernameOption() final</text></g><!--MD5=[80f2ce77dddce333d3e0f60a4982de2e]
class TestingPeriodOption--><g id="elem_TestingPeriodOption"><rect codeLine="332" fill="#F1F1F1" height="41.6094" id="TestingPeriodOption" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="181" x="1171" y="982"/><ellipse cx="1226.875" cy="990" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1227.875,988.25 Q1227.9766,988 1228.0938,987.875 Q1228.2109,987.75 1228.3438,987.75 Q1228.5781,987.75 1228.7266,987.8906 Q1228.875,988.0313 1228.875,988.3594 L1228.875,989.1406 Q1228.875,989.4688 1228.7344,989.6094 Q1228.5938,989.75 1228.375,989.75 Q1228.1797,989.75 1228.0547,989.6641 Q1227.9297,989.5781 1227.875,989.3516 Q1227.8516,989.1953 1227.7656,989.1094 Q1227.6094,988.9453 1227.3281,988.8516 Q1227.0469,988.75 1226.7656,988.75 Q1226.4141,988.75 1226.1172,988.8906 Q1225.8281,989.0313 1225.6016,989.3438 Q1225.375,989.6563 1225.375,990.0859 L1225.375,990.5469 Q1225.375,991.0625 1225.7969,991.4063 Q1226.2188,991.75 1226.9688,991.75 Q1227.4141,991.75 1227.7266,991.6484 Q1227.9063,991.5938 1228.1094,991.4141 Q1228.2422,991.3125 1228.3125,991.2813 Q1228.3828,991.25 1228.4688,991.25 Q1228.6328,991.25 1228.75,991.3828 Q1228.875,991.5078 1228.875,991.6875 Q1228.875,991.8594 1228.7031,992.0625 Q1228.4531,992.3594 1228.0547,992.5234 Q1227.5313,992.75 1226.8906,992.75 Q1226.1406,992.75 1225.5391,992.4531 Q1225.0547,992.2188 1224.7109,991.7109 Q1224.375,991.2031 1224.375,990.6016 L1224.375,990.0547 Q1224.375,989.4297 1224.6719,988.8828 Q1224.9766,988.3359 1225.5,988.0469 Q1226.0313,987.75 1226.625,987.75 Q1226.9844,987.75 1227.2969,987.875 Q1227.6094,988 1227.875,988.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="65" x="1237.125" y="992.8643">TestingPeriodOption</text><line style="stroke:#181818;stroke-width:0.25;" x1="1171.5" x2="1351.5" y1="998" y2="998"/><line style="stroke:#181818;stroke-width:0.25;" x1="1171.5" x2="1351.5" y1="1002" y2="1002"/><ellipse cx="1176.5" cy="1007.5" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="168" x="1181" y="1011.2666">TestingPeriodOption(std::vector&lt;QWidget *&gt; &amp; fields)</text><ellipse cx="1176.5" cy="1016.3047" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="89" x="1181" y="1020.0713">~TestingPeriodOption() final</text></g><!--MD5=[d8f55d6bfeb8347b47b890fdccaec3fe]
class TestingDurationOption--><g id="elem_TestingDurationOption"><rect codeLine="338" fill="#F1F1F1" height="41.6094" id="TestingDurationOption" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="187.5" x="1369.75" y="982"/><ellipse cx="1425.625" cy="990" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1426.625,988.25 Q1426.7266,988 1426.8438,987.875 Q1426.9609,987.75 1427.0938,987.75 Q1427.3281,987.75 1427.4766,987.8906 Q1427.625,988.0313 1427.625,988.3594 L1427.625,989.1406 Q1427.625,989.4688 1427.4844,989.6094 Q1427.3438,989.75 1427.125,989.75 Q1426.9297,989.75 1426.8047,989.6641 Q1426.6797,989.5781 1426.625,989.3516 Q1426.6016,989.1953 1426.5156,989.1094 Q1426.3594,988.9453 1426.0781,988.8516 Q1425.7969,988.75 1425.5156,988.75 Q1425.1641,988.75 1424.8672,988.8906 Q1424.5781,989.0313 1424.3516,989.3438 Q1424.125,989.6563 1424.125,990.0859 L1424.125,990.5469 Q1424.125,991.0625 1424.5469,991.4063 Q1424.9688,991.75 1425.7188,991.75 Q1426.1641,991.75 1426.4766,991.6484 Q1426.6563,991.5938 1426.8594,991.4141 Q1426.9922,991.3125 1427.0625,991.2813 Q1427.1328,991.25 1427.2188,991.25 Q1427.3828,991.25 1427.5,991.3828 Q1427.625,991.5078 1427.625,991.6875 Q1427.625,991.8594 1427.4531,992.0625 Q1427.2031,992.3594 1426.8047,992.5234 Q1426.2813,992.75 1425.6406,992.75 Q1424.8906,992.75 1424.2891,992.4531 Q1423.8047,992.2188 1423.4609,991.7109 Q1423.125,991.2031 1423.125,990.6016 L1423.125,990.0547 Q1423.125,989.4297 1423.4219,988.8828 Q1423.7266,988.3359 1424.25,988.0469 Q1424.7813,987.75 1425.375,987.75 Q1425.7344,987.75 1426.0469,987.875 Q1426.3594,988 1426.625,988.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="71.5" x="1435.875" y="992.8643">TestingDurationOption</text><line style="stroke:#181818;stroke-width:0.25;" x1="1370.25" x2="1556.75" y1="998" y2="998"/><line style="stroke:#181818;stroke-width:0.25;" x1="1370.25" x2="1556.75" y1="1002" y2="1002"/><ellipse cx="1375.25" cy="1007.5" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="174.5" x="1379.75" y="1011.2666">TestingDurationOption(std::vector&lt;QWidget *&gt; &amp; fields)</text><ellipse cx="1375.25" cy="1016.3047" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="95.5" x="1379.75" y="1020.0713">~TestingDurationOption() final</text></g><!--MD5=[d37436173dd347d868cdd428de2f2acd]
class CompletionPercentage--><g id="elem_CompletionPercentage"><rect codeLine="344" fill="#F1F1F1" height="41.6094" id="CompletionPercentage" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="188" x="1575" y="982"/><ellipse cx="1630.875" cy="990" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1631.875,988.25 Q1631.9766,988 1632.0938,987.875 Q1632.2109,987.75 1632.3438,987.75 Q1632.5781,987.75 1632.7266,987.8906 Q1632.875,988.0313 1632.875,988.3594 L1632.875,989.1406 Q1632.875,989.4688 1632.7344,989.6094 Q1632.5938,989.75 1632.375,989.75 Q1632.1797,989.75 1632.0547,989.6641 Q1631.9297,989.5781 1631.875,989.3516 Q1631.8516,989.1953 1631.7656,989.1094 Q1631.6094,988.9453 1631.3281,988.8516 Q1631.0469,988.75 1630.7656,988.75 Q1630.4141,988.75 1630.1172,988.8906 Q1629.8281,989.0313 1629.6016,989.3438 Q1629.375,989.6563 1629.375,990.0859 L1629.375,990.5469 Q1629.375,991.0625 1629.7969,991.4063 Q1630.2188,991.75 1630.9688,991.75 Q1631.4141,991.75 1631.7266,991.6484 Q1631.9063,991.5938 1632.1094,991.4141 Q1632.2422,991.3125 1632.3125,991.2813 Q1632.3828,991.25 1632.4688,991.25 Q1632.6328,991.25 1632.75,991.3828 Q1632.875,991.5078 1632.875,991.6875 Q1632.875,991.8594 1632.7031,992.0625 Q1632.4531,992.3594 1632.0547,992.5234 Q1631.5313,992.75 1630.8906,992.75 Q1630.1406,992.75 1629.5391,992.4531 Q1629.0547,992.2188 1628.7109,991.7109 Q1628.375,991.2031 1628.375,990.6016 L1628.375,990.0547 Q1628.375,989.4297 1628.6719,988.8828 Q1628.9766,988.3359 1629.5,988.0469 Q1630.0313,987.75 1630.625,987.75 Q1630.9844,987.75 1631.2969,987.875 Q1631.6094,988 1631.875,988.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="72" x="1641.125" y="992.8643">CompletionPercentage</text><line style="stroke:#181818;stroke-width:0.25;" x1="1575.5" x2="1762.5" y1="998" y2="998"/><line style="stroke:#181818;stroke-width:0.25;" x1="1575.5" x2="1762.5" y1="1002" y2="1002"/><ellipse cx="1580.5" cy="1007.5" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="175" x="1585" y="1011.2666">CompletionPercentage(std::vector&lt;QWidget *&gt; &amp; fields)</text><ellipse cx="1580.5" cy="1016.3047" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="96" x="1585" y="1020.0713">~CompletionPercentage() final</text></g><!--MD5=[84c6b02da397f535dd69f240a20f3b18]
class HtmlViewer--><g id="elem_HtmlViewer"><rect codeLine="361" fill="#F1F1F1" height="129.6563" id="HtmlViewer" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="146" x="1099.5" y="3.5"/><ellipse cx="1153.125" cy="11.5" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1154.125,9.75 Q1154.2266,9.5 1154.3438,9.375 Q1154.4609,9.25 1154.5938,9.25 Q1154.8281,9.25 1154.9766,9.3906 Q1155.125,9.5313 1155.125,9.8594 L1155.125,10.6406 Q1155.125,10.9688 1154.9844,11.1094 Q1154.8438,11.25 1154.625,11.25 Q1154.4297,11.25 1154.3047,11.1641 Q1154.1797,11.0781 1154.125,10.8516 Q1154.1016,10.6953 1154.0156,10.6094 Q1153.8594,10.4453 1153.5781,10.3516 Q1153.2969,10.25 1153.0156,10.25 Q1152.6641,10.25 1152.3672,10.3906 Q1152.0781,10.5313 1151.8516,10.8438 Q1151.625,11.1563 1151.625,11.5859 L1151.625,12.0469 Q1151.625,12.5625 1152.0469,12.9063 Q1152.4688,13.25 1153.2188,13.25 Q1153.6641,13.25 1153.9766,13.1484 Q1154.1563,13.0938 1154.3594,12.9141 Q1154.4922,12.8125 1154.5625,12.7813 Q1154.6328,12.75 1154.7188,12.75 Q1154.8828,12.75 1155,12.8828 Q1155.125,13.0078 1155.125,13.1875 Q1155.125,13.3594 1154.9531,13.5625 Q1154.7031,13.8594 1154.3047,14.0234 Q1153.7813,14.25 1153.1406,14.25 Q1152.3906,14.25 1151.7891,13.9531 Q1151.3047,13.7188 1150.9609,13.2109 Q1150.625,12.7031 1150.625,12.1016 L1150.625,11.5547 Q1150.625,10.9297 1150.9219,10.3828 Q1151.2266,9.8359 1151.75,9.5469 Q1152.2813,9.25 1152.875,9.25 Q1153.2344,9.25 1153.5469,9.375 Q1153.8594,9.5 1154.125,9.75 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="34.5" x="1163.375" y="14.3643">HtmlViewer</text><line style="stroke:#181818;stroke-width:0.25;" x1="1100" x2="1245" y1="19.5" y2="19.5"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1103.5" y="23.5"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="56.5" x="1109.5" y="28.7666">Ui::HtmlViewer * ui</text><line style="stroke:#181818;stroke-width:0.25;" x1="1100" x2="1245" y1="32.3047" y2="32.3047"/><ellipse cx="1105" cy="37.8047" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="71.5" x="1109.5" y="41.5713">HtmlViewer(QWidget *)</text><ellipse cx="1105" cy="46.6094" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="43.5" x="1109.5" y="50.376">~HtmlViewer()</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="1109.5" y="59.1807"> </text><ellipse cx="1105" cy="64.2188" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="133" x="1109.5" y="67.9854">void OpenSource(const QString &amp; source)</text><ellipse cx="1105" cy="73.0234" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="131" x="1109.5" y="76.79">void SetWindowTitle(const QString &amp; title)</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="1109.5" y="85.5947"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1103.5" y="89.1328"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="64.5" x="1109.5" y="94.3994">void displaySource()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1103.5" y="97.9375"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="108.5" x="1109.5" y="103.2041">void on_prevPageButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1103.5" y="106.7422"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="107.5" x="1109.5" y="112.0088">void on_nextPageButton_clicked()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1103.5" y="115.5469"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="57" x="1109.5" y="120.8135">void urlChanged()</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1103.5" y="124.3516"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="117.5" x="1109.5" y="129.6182">void on_settingsMenuBar_triggered()</text></g><!--MD5=[3cc77cbc7a76fb5b54ae2d946f4e8d01]
class SettingsWindow--><g id="elem_SettingsWindow"><rect codeLine="379" fill="#F1F1F1" height="112.0469" id="SettingsWindow" rx="1.25" ry="1.25" style="stroke:#181818;stroke-width:0.25;" width="171" x="1329" y="522"/><ellipse cx="1387.375" cy="530" fill="#ADD1B2" rx="5.5" ry="5.5" style="stroke:#181818;stroke-width:0.5;"/><path d="M1388.375,528.25 Q1388.4766,528 1388.5938,527.875 Q1388.7109,527.75 1388.8438,527.75 Q1389.0781,527.75 1389.2266,527.8906 Q1389.375,528.0313 1389.375,528.3594 L1389.375,529.1406 Q1389.375,529.4688 1389.2344,529.6094 Q1389.0938,529.75 1388.875,529.75 Q1388.6797,529.75 1388.5547,529.6641 Q1388.4297,529.5781 1388.375,529.3516 Q1388.3516,529.1953 1388.2656,529.1094 Q1388.1094,528.9453 1387.8281,528.8516 Q1387.5469,528.75 1387.2656,528.75 Q1386.9141,528.75 1386.6172,528.8906 Q1386.3281,529.0313 1386.1016,529.3438 Q1385.875,529.6563 1385.875,530.0859 L1385.875,530.5469 Q1385.875,531.0625 1386.2969,531.4063 Q1386.7188,531.75 1387.4688,531.75 Q1387.9141,531.75 1388.2266,531.6484 Q1388.4063,531.5938 1388.6094,531.4141 Q1388.7422,531.3125 1388.8125,531.2813 Q1388.8828,531.25 1388.9688,531.25 Q1389.1328,531.25 1389.25,531.3828 Q1389.375,531.5078 1389.375,531.6875 Q1389.375,531.8594 1389.2031,532.0625 Q1388.9531,532.3594 1388.5547,532.5234 Q1388.0313,532.75 1387.3906,532.75 Q1386.6406,532.75 1386.0391,532.4531 Q1385.5547,532.2188 1385.2109,531.7109 Q1384.875,531.2031 1384.875,530.6016 L1384.875,530.0547 Q1384.875,529.4297 1385.1719,528.8828 Q1385.4766,528.3359 1386,528.0469 Q1386.5313,527.75 1387.125,527.75 Q1387.4844,527.75 1387.7969,527.875 Q1388.1094,528 1388.375,528.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="50" x="1397.625" y="532.8643">SettingsWindow</text><line style="stroke:#181818;stroke-width:0.25;" x1="1329.5" x2="1499.5" y1="538" y2="538"/><rect fill="none" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1333" y="542"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="72" x="1339" y="547.2666">Ui::SettingsWindow *ui;</text><line style="stroke:#181818;stroke-width:0.25;" x1="1329.5" x2="1499.5" y1="550.8047" y2="550.8047"/><ellipse cx="1334.5" cy="556.3047" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="61" x="1339" y="560.0713">~SettingsWindow();</text><ellipse cx="1334.5" cy="565.1094" fill="#84BE84" rx="1.5" ry="1.5" style="stroke:#038048;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="110.5" x="1339" y="568.876">static SettingsWindow &amp; Instance();</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1333" y="572.4141"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="137" x="1339" y="577.6807">SettingsWindow(QWidget *parent = nullptr);</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1333" y="581.2188"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="44" x="1339" y="586.4854">void update();</text><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="2" x="1339" y="595.29"> </text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1333" y="598.8281"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="148.5" x="1339" y="604.0947">void on_changeTheorySourceButton_clicked();</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1333" y="607.6328"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="143" x="1339" y="612.8994">void on_saveTheorySettingsButton_clicked();</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1333" y="616.4375"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="158" x="1339" y="621.7041">void on_changeQuestionsSourceButton_clicked();</text><rect fill="#F24D5C" height="3" style="stroke:#C82930;stroke-width:0.5;" width="3" x="1333" y="625.2422"/><text fill="#000000" font-family="sans-serif" font-size="7" lengthAdjust="spacing" textLength="149.5" x="1339" y="630.5088">void on_saveTestingsWettingsButton_clicked();</text></g><!--MD5=[bf77695be7675a1b9039a616b3fa5396]
link MainWindow to DemoSystem--><g id="link_MainWindow_DemoSystem"><path codeLine="29" d="M822.445,212.785 C690.84,218.365 366.045,236.985 271,287.5 C253.335,296.89 237.79,311.9 225.235,327.035 " fill="none" id="MainWindow-DemoSystem" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[3255bedb82ab00c8b792f9f7ff8ed42e]
reverse link GraphDemo to CyclesDemo--><g id="link_GraphDemo_CyclesDemo"><path codeLine="67" d="M372.495,453.77 C350.43,468.85 327.18,484.745 304.97,499.93 " fill="none" id="GraphDemo-backto-CyclesDemo" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="370.655,450.785,380.885,448.03,374.605,456.565,370.655,450.785" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[367b86f704545cbf9583369c488a31dd]
reverse link DemoSystem to CyclesDemo--><g id="link_DemoSystem_CyclesDemo"><path codeLine="68" d="M191.5,432.93 C191.5,453.52 191.5,477.455 191.5,499.85 " fill="none" id="DemoSystem-backto-CyclesDemo" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="191.5,430.305,189.5,434.805,191.5,432.805,193.5,434.805,191.5,430.305" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[28ddc219b02313e890aa00367bdb51ae]
reverse link GraphDemo to KruskalDemo--><g id="link_GraphDemo_KruskalDemo"><path codeLine="86" d="M456.21,457.585 C450.765,474.465 445.04,492.185 439.72,508.67 " fill="none" id="GraphDemo-backto-KruskalDemo" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="452.895,456.475,459.295,448.03,459.555,458.625,452.895,456.475" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[915fe204847df85e7d2f885543182b28]
reverse link DemoSystem to KruskalDemo--><g id="link_DemoSystem_KruskalDemo"><path codeLine="87" d="M231.96,432.34 C243.64,445.635 257.035,459.18 271,470 C294.41,488.14 306.015,483.34 330.5,500 C334.515,502.73 338.54,505.63 342.54,508.645 " fill="none" id="DemoSystem-backto-KruskalDemo" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="230.245,430.38,231.693,435.0867,231.8872,432.265,234.709,432.4592,230.245,430.38" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[5fa69fce97c8b6d2b3df1864f2b2f85c]
reverse link CyclesDemo to Graph--><g id="link_CyclesDemo_Graph"><path codeLine="112" d="M236.96,661.77 C241.295,669.715 245.72,677.825 250.13,685.9 " fill="none" id="CyclesDemo-backto-Graph" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="233.82,656.02,233.5014,659.6114,236.694,661.2869,237.0126,657.6954,233.82,656.02" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[a13aeb6a71f0265306137f0cf98ca387]
reverse link KruskalDemo to Graph--><g id="link_KruskalDemo_Graph"><path codeLine="113" d="M376.825,653.005 C370.985,663.705 364.9,674.855 358.85,685.945 " fill="none" id="KruskalDemo-backto-Graph" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="379.95,647.285,376.7574,648.9604,377.076,652.5519,380.2686,650.8764,379.95,647.285" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[36e05bc45e193ffdbc5f863a71050bde]
link State to Vertex--><g id="link_State_Vertex"><path codeLine="138" d="M111,806.795 C111,830.445 111,871.17 111,909.34 " fill="none" id="State-to-Vertex" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="111,915.935,113,912.935,111,909.935,109,912.935,111,915.935" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[16220c49d741f8955299156564743ffd]
reverse link Graph to Vertex--><g id="link_Graph_Vertex"><path codeLine="139" d="M210.835,890.935 C203.32,899.315 195.78,907.72 188.4,915.95 " fill="none" id="Graph-backto-Vertex" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="215.255,886.005,211.7631,886.9032,211.2492,890.472,214.7411,889.5737,215.255,886.005" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="3.5" x="208.2005" y="896.8169">1</text><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="6" x="185.7713" y="910.5831">...</text></g><!--MD5=[0226400ad6c7e3839dce5158daf87666]
link Vertex to Edge--><g id="link_Vertex_Edge"><path codeLine="140" d="M224.51,1002.75 C224.51,1002.75 229.865,1002.75 229.865,1002.75 " fill="none" id="Vertex-Edge" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="235.865,1002.75,232.865,1000.75,229.865,1002.75,232.865,1004.75,235.865,1002.75" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="218.51,1002.75,221.51,1004.75,224.51,1002.75,221.51,1000.75,218.51,1002.75" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="3.5" x="222.4365" y="1001.3537">2</text><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="6" x="225.9394" y="1001.3231">...</text></g><!--MD5=[0d0508bdbd3a02383af3158b3f4009c2]
reverse link Graph to Edge--><g id="link_Graph_Edge"><path codeLine="161" d="M311.875,892.585 C312.52,901.855 313.165,911.145 313.795,920.18 " fill="none" id="Graph-backto-Edge" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="311.42,886.005,309.6324,889.1362,311.8353,891.9906,313.6229,888.8594,311.42,886.005" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="3.5" x="308.122" y="896.8169">1</text><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="6" x="307.3734" y="914.7416">...</text></g><!--MD5=[809baee131d4f4736177581fcadcbfba]
reverse link MainWindow to TestingSystem--><g id="link_MainWindow_TestingSystem"><path codeLine="186" d="M928.06,259.44 C939.585,270.76 952.175,283.125 964.73,295.465 " fill="none" id="MainWindow-backto-TestingSystem" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="926.22,257.63,928.0249,262.2117,928.002,259.3834,930.8304,259.3605,926.22,257.63" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[dda7d0f62dd501289285ee382cc3f31f]
reverse link TestingWidget to QuestionWidget--><g id="link_TestingWidget_QuestionWidget"><path codeLine="201" d="M956.795,662.385 C950.825,683.5 944.54,705.745 938.975,725.43 " fill="none" id="TestingWidget-backto-QuestionWidget" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="958.59,656.02,955.8484,658.3618,956.9556,661.7931,959.6972,659.4514,958.59,656.02" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="3.5" x="953.944" y="666.743">1</text><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="6" x="933.8703" y="720.0514">...</text></g><!--MD5=[ef154ef6ff1d50fd25ca0d1e7faba8f3]
link Complexity to Question--><g id="link_Complexity_Question"><path codeLine="222" d="M729.52,1002.75 C732.785,1002.75 736.055,1002.75 739.325,1002.75 " fill="none" id="Complexity-to-Question" style="stroke:#181818;stroke-width:0.5;"/><ellipse cx="742.95" cy="1002.75" fill="#FFFFFF" rx="4" ry="4" style="stroke:#181818;stroke-width:0.5;"/><line style="stroke:#181818;stroke-width:0.5;" x1="738.95" x2="746.95" y1="1002.75" y2="1002.75"/><line style="stroke:#181818;stroke-width:0.5;" x1="742.95" x2="742.95" y1="998.75" y2="1006.75"/></g><!--MD5=[1f968675f0384bc8683d0cf5f2b186b6]
reverse link QuestionWidget to Question--><g id="link_QuestionWidget_Question"><path codeLine="223" d="M901.975,852.97 C893.405,881.415 883.47,914.39 875.12,942.1 " fill="none" id="QuestionWidget-backto-Question" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="903.895,846.6,901.1132,848.8938,902.1606,852.3439,904.9424,850.0501,903.895,846.6" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[da955993e7714a25a025796bc699b864]
link SessionStatWidget to TestingSystem--><g id="link_SessionStatWidget_TestingSystem"><path codeLine="234" d="M1049,248.76 C1049,258.565 1049,269.585 1049,280.94 " fill="none" id="SessionStatWidget-to-TestingSystem" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="1049,287.47,1051,284.47,1049,281.47,1047,284.47,1049,287.47" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[baf0d0e86060a3e451489a90c6091789]
reverse link TestingSystem to StatDatabaseViewWidget--><g id="link_TestingSystem_StatDatabaseViewWidget"><path codeLine="251" d="M1121.165,472.15 C1131.925,486.005 1142.815,500.025 1152.985,513.115 " fill="none" id="TestingSystem-backto-StatDatabaseViewWidget" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="1119.575,470.105,1120.7626,474.8841,1121.1113,472.0772,1123.9182,472.4259,1119.575,470.105" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[6ec9b42261f135ef5028474f818e82b4]
reverse link Error to StatError--><g id="link_Error_StatError"><path codeLine="256" d="M788.59,620.92 C761.05,666.895 718.51,737.905 699.615,769.45 " fill="none" id="Error-backto-StatError" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="785.66,619,793.8,612.22,791.665,622.595,785.66,619" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[aef0db869bde786f22026dd74a922383]
reverse link SessionStat to StatError--><g id="link_SessionStat_StatError"><path codeLine="257" d="M652.44,659.07 C664.575,699.93 678.205,745.805 685.235,769.465 " fill="none" id="SessionStat-backto-StatError" style="stroke:#181818;stroke-width:0.5;"/><ellipse cx="651.4096" cy="655.6042" fill="#FFFFFF" rx="4" ry="4" style="stroke:#181818;stroke-width:0.5;"/><line style="stroke:#181818;stroke-width:0.5;" x1="652.5492" x2="650.27" y1="659.4385" y2="651.77"/><line style="stroke:#181818;stroke-width:0.5;" x1="647.5754" x2="655.2438" y1="656.7438" y2="654.4646"/></g><!--MD5=[f81fc71ae23238dde00d24a3616374fb]
reverse link TestingSystem to SessionStat--><g id="link_TestingSystem_SessionStat"><path codeLine="277" d="M959.01,468.46 C958.01,468.985 957.01,469.5 956,470 C874.275,510.485 838.62,468.575 753,500 C749.475,501.295 745.94,502.695 742.415,504.19 " fill="none" id="TestingSystem-backto-SessionStat" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="964.685,465.285,961.0904,465.0036,959.4482,468.2134,963.0427,468.4948,964.685,465.285" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[9569722375319003ac7aa33819bc1752]
link WelcomeToTesting to TestingSystem--><g id="link_WelcomeToTesting_TestingSystem"><path codeLine="292" d="M947.25,378.75 C950.895,378.75 954.535,378.75 958.18,378.75 " fill="none" id="WelcomeToTesting-to-TestingSystem" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="964.74,378.75,961.74,376.75,958.74,378.75,961.74,380.75,964.74,378.75" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[1da8daed6526f639e564449c8c9c1a64]
reverse link TestingSystem to TestingWidget--><g id="link_TestingSystem_TestingWidget"><path codeLine="312" d="M1015.42,476.435 C1012.69,484.335 1009.955,492.255 1007.285,499.985 " fill="none" id="TestingSystem-backto-TestingWidget" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="1017.605,470.105,1014.7353,472.2878,1015.6464,475.7763,1018.5161,473.5935,1017.605,470.105" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[a3f0ac85b48c49cad7abe732021b42cc]
reverse link StatDatabaseViewWidget to StatDatabaseViewOption--><g id="link_StatDatabaseViewWidget_StatDatabaseViewOption"><path codeLine="324" d="M1222.995,649.255 C1231.83,680.52 1241.925,716.23 1249.56,743.245 " fill="none" id="StatDatabaseViewWidget-backto-StatDatabaseViewOption" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="1221.19,642.86,1220.0802,646.2905,1222.82,648.6343,1223.9298,645.2038,1221.19,642.86" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="3.5" x="1218.6404" y="653.5891">1</text><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="6" x="1242.2294" y="737.8304">...</text></g><!--MD5=[170a3187a627bfb4a69c396c1cf39928]
reverse link StatDatabaseViewOption to UsernameOption--><g id="link_StatDatabaseViewOption_UsernameOption"><path codeLine="330" d="M1216.99,836.385 C1175.79,882.565 1116.585,948.92 1087.11,981.955 " fill="none" id="StatDatabaseViewOption-backto-UsernameOption" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="1214.43,834,1223.7,828.87,1219.65,838.66,1214.43,834" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[64d5f7fe9daf41599250fe0b925601bd]
reverse link StatDatabaseViewOption to TestingPeriodOption--><g id="link_StatDatabaseViewOption_TestingPeriodOption"><path codeLine="336" d="M1261.5,838.975 C1261.5,885.015 1261.5,949.53 1261.5,981.955 " fill="none" id="StatDatabaseViewOption-backto-TestingPeriodOption" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="1258,838.87,1261.5,828.87,1265,838.87,1258,838.87" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[9ac08931f7d828d8a1acacfe4ac1f8f2]
reverse link StatDatabaseViewOption to TestingDurationOption--><g id="link_StatDatabaseViewOption_TestingDurationOption"><path codeLine="342" d="M1308.07,836.24 C1351.31,882.425 1413.535,948.885 1444.5,981.955 " fill="none" id="StatDatabaseViewOption-backto-TestingDurationOption" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="1305.445,838.56,1301.17,828.87,1310.555,833.775,1305.445,838.56" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[d13015ac341101ebe2bb42d6e5b2d6c6]
reverse link StatDatabaseViewOption to CompletionPercentage--><g id="link_StatDatabaseViewOption_CompletionPercentage"><path codeLine="348" d="M1392.71,832.465 C1448.035,854.315 1511.995,882.92 1566,916 C1597.125,935.065 1628.69,963.055 1648.52,981.93 " fill="none" id="StatDatabaseViewOption-backto-CompletionPercentage" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="none" points="1391.41,835.715,1383.375,828.81,1393.96,829.195,1391.41,835.715" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[bab33e9fbcb68422cdbdc6850ce72b20]
link HtmlViewer to MainWindow--><g id="link_HtmlViewer_MainWindow"><path codeLine="376" d="M1099.455,93.84 C1053.46,110.835 993.535,135.21 943.5,163 C941.265,164.24 939.02,165.545 936.77,166.895 " fill="none" id="HtmlViewer-to-MainWindow" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="934.525,168.26,939.4088,167.6286,936.6605,166.9601,937.329,164.2118,934.525,168.26" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[2084bf8a3897f5d97b3b24d4f074ec5a]
reverse link TestingSystem to HtmlViewer--><g id="link_TestingSystem_HtmlViewer"><path codeLine="377" d="M1137.035,288.97 C1143.82,278.895 1149.835,268.335 1154.5,257.5 C1171.325,218.42 1175.75,170.69 1176.005,133.005 " fill="none" id="TestingSystem-backto-HtmlViewer" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="1133.305,294.355,1136.6572,293.0273,1136.7209,289.4223,1133.3687,290.75,1133.305,294.355" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="3.5" x="1137.2044" y="289.1015">1</text><text fill="#000000" font-family="sans-serif" font-size="6.5" lengthAdjust="spacing" textLength="3.5" x="1172.6119" y="143.9429">1</text></g><!--MD5=[a11bfaf7a1787f96ae9feaab8966e431]
reverse link HtmlViewer to SettingsWindow--><g id="link_HtmlViewer_SettingsWindow"><path codeLine="392" d="M1204.22,135.43 C1252.415,236.755 1343.215,427.64 1388.065,521.92 " fill="none" id="HtmlViewer-backto-SettingsWindow" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="1203.09,133.055,1203.2256,137.9776,1204.1679,135.3107,1206.8347,136.253,1203.09,133.055" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[b8162033a079197d8783337672bb687d]
reverse link TestingSystem to SettingsWindow--><g id="link_TestingSystem_SettingsWindow"><path codeLine="393" d="M1135.755,410.84 C1190.6,432.48 1261.925,463.765 1320.5,500 C1331.025,506.51 1341.645,514.09 1351.77,521.915 " fill="none" id="TestingSystem-backto-SettingsWindow" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#181818" points="1133.32,409.88,1136.7741,413.3899,1135.6461,410.7961,1138.2399,409.6681,1133.32,409.88" style="stroke:#181818;stroke-width:0.5;"/></g><!--MD5=[36b81f6a0c541298c3fa38dfa7bcc3de]
@startuml
'https://plantuml.com/class-diagram

class MainWindow {
    - Ui::MainWindow * ui

    + MainWindow(QWidget *)
    + ~MainWindow() override
    
    - void displayHelloText()
    - void on_theoryButton_clicked()
    - void on_demoButton_clicked()
    - void on_testingButton_clicked()
}

' ''''''''''''''''''''''''''''''''''''''''''''''''''' DEMO SYSTEM '''''''''''''''''''''''''''''''''''''''''''''''''''' '

class DemoSystem {
	- Ui::DemoSystem * ui
	- KruskalDemo * kruskalDemo
	- CyclesDemo * cyclesDemo

	+ DemoSystem(QWidget *)
	+ ~DemoSystem() override

	- void closeEvent(QCloseEvent *) override
	- void ShowKruskal()
	- void ShowCycles()
}
MainWindow - - DemoSystem

class GraphDemo {
    + GraphDemo(QWidget * parent, const QString & tempDirName, const QRect & sceneRect, const QRect & internalSceneRect)
    + virtual ~GraphDemo() = 0

    # QGraphicsScene * scene
    # QGraphicsScene * internalScene
    # std::unique_ptr<Graph> graph

    # std::list<QGraphicsSvgItem *> demoSteps
    # std::list<QGraphicsSvgItem*>::iterator currentStep

    # QDir tmp
    # int snapshotNumber = 1000

    # static std::unique_ptr<Graph> generateGraph() noexcept
    # void loadDemo()
}

class CyclesDemo {
	- Ui::CyclesDemo * ui
	- QGraphicsTextItem * stackView

	+ CyclesDemo(QWidget * parent)
    + ~CyclesDemo() override

	- void on_prevStepButton_clicked()
	- void on_nextStepButton_clicked()
	- void on_toBeginOfDemoButton_clicked()
	- void on_toEndOfDemoButton_clicked()
	- void on_startButton_clicked()
	- void on_switchDemoButton_clicked()
	- void takeSnapshot(QGraphicsScene *)
	- void displayStack(const std::stack<std::pair<Vertex *, Vertex *>> & st) noexcept

	- void switchDemo()
}
GraphDemo <|- - CyclesDemo
DemoSystem <- - CyclesDemo

class KruskalDemo {
	- Ui::KruskalDemo * ui
	- std::shared_ptr<Graph> mst

    + KruskalDemo(QWidget * parent)
    + ~KruskalDemo() override

	- void on_prevStepButton_clicked()
	- void on_nextStepButton_clicked()
	- void on_toBeginOfDemoButton_clicked()
	- void on_toEndOfDemoButton_clicked()
	- void on_switchDemoButton_clicked()
	- void takeSnapshot(QGraphicsScene * scene)

	- void switchDemo()
}
GraphDemo <|- - KruskalDemo
DemoSystem <- - KruskalDemo

class Graph {
    - std::list<Vertex> vertices
    - std::list<Edge> edges
    - QGraphicsScene * scene
    - QPoint graphCenter
    - uint64_t graphDiameter

	+ Graph(size_t numberOfVertices)
	+ Graph(const Graph & graph)
	+ void RandomlyLinkVertices(size_t numberOfEdges, int minEdgeCost, int maxEdgeCost)
	+ void Kruskal(Graph & mst)
	+ static bool DoesPathExist(std::list<Edge *> & path, Vertex *, Vertex *, Vertex *)
	+ void CheckEdgeInCycleDemo(Edge * edge)
	+ void PrepareToPaint(QPoint, int64_t, QGraphicsScene *)
	+ void Paint(uint32_t, uint32_t)
	+ void HideEdges()
	+ Edge * FindEdge(char, char) const noexcept
	+ Edge * FindEdge(Edge) const noexcept
	+ Vertex * FindVertex(char label) noexcept

    - void takeSnapshot(QGraphicsScene * scene) const
    - void stackChanged(std::stack<std::pair<Vertex *, Vertex *>> &) const
}
CyclesDemo o- - Graph
KruskalDemo o- - Graph

enum State {
    Unvisited
    Visited
}
class Vertex {
	- char label
	- std::vector<Edge *> edges
	- QGraphicsScene * scene
	- std::shared_ptr<QPoint> labelPos
	- std::shared_ptr<QRect> ellipse
	- QGraphicsEllipseItem * graphicsEllipse
	- QGraphicsTextItem * graphicsLabel

	+ State state
	+ Vertex(char)
	+ void PrepareToPaint(QPoint, QPoint, QSize, QGraphicsScene *)
	+ QPoint FindLabelPos(QPoint)
	+ void Paint(QPen, QBrush)
	+ QPoint Coordinates()
	+ void Show()
	+ void SetColor(int)
	+ char GetLabel()
}
Vertex *-up- State
Graph "1" *- - "..." Vertex
Vertex "2" o-right-o "..." Edge

class Edge {
	- Vertex * from
	- Vertex * to
	- int cost
	- QGraphicsScene * scene
	- std::shared_ptr<QPoint> costPos
	- std::shared_ptr<QLine> edge
	- QGraphicsLineItem * graphicsEdge
	- QGraphicsTextItem * graphicsCost

	+ Edge(Vertex *, Vertex *, int) noexcept
	+ void PrepareToPaint(QPoint, QGraphicsScene *)
	+ QPoint FindCostPos(QPoint) const noexcept
	+ void Paint(QPen)
	+ void SetPen(QPen)
	+ void Hide() noexcept
	+ void Show() noexcept
	+ QString GetName() const
}
Graph "1" *- - "..." Edge

' '''''''''''''''''''''''''''''''''''''''''''''''''' TESTING SYSTEM '''''''''''''''''''''''''''''''''''''''''''''''''' '

class TestingSystem {
	- Ui::TestingSystem * ui
	- WelcomeToTesting * welcomeToTestingWidget
	- TestingWidget * testingWidget
	- SessionStatWidget * statWidget
	- std::shared_ptr<SessionStat> currentSessionStat
	- HtmlViewer * viewer

	+ TestingSystem(QWidget *)
	+ ~TestingSystem() override

    - void showRef(const QString & refSectionName)

	- void on_openSettingsMenu_triggered()
	- void on_statMenu_triggered()
	- void startTest(const QString & username)
	- void saveStat()
	- void showStat()
	- void showTestingRules()
    - void showEditQuestionsRules()
}
MainWindow <- - TestingSystem

class QuestionWidget {
	- Ui::QuestionWidget * ui
	- QTextBrowser * questionTextBrowser
	- shared_ptr<Question> question
	- vector<QCheckBox *> answersCheckBoxes
	- void formAnswers()

	+ QuestionWidget(shared_ptr<Question>, QWidget *, QTextBrowser *)
	+ ~QuestionWidget() override
	+ void Display()
	+ int RateAnswer()
	+ shared_ptr<Question> GetQuestion()
}
TestingWidget "1" *- - "..." QuestionWidget

enum Complexity {
    simple
    medium
    hard
}
class Question {
	- QString question
	- Complexity complexity
	- vector<QString> answers
	- set<int> correctAnswers

	+ Question()
	+ Question(QString, std::vector<QString>, std::set<int>, Complexity)
	+ Question(QJsonObject)
	+ int RateAnswer(std::set<int>) const noexcept
	+ QString GetQuestion() const noexcept
	+ vector<QString> GetAnswers() const noexcept
	+ Complexity GetComplexity() const noexcept
}
Question +-left- Complexity
QuestionWidget *- - Question

class SessionStatWidget {
    - Ui::SessionStatWidget * ui

	+ SessionStatWidget(shared_ptr<SessionStat>, QWidget *)
	+ ~SessionStatWidget() override

	- void closeEvent(QCloseEvent *) override
	- void closed()
}
TestingSystem *-up- SessionStatWidget

class StatDatabaseViewWidget {
	- Ui::StatDatabaseViewWidget * ui
	- QSqlDatabase * db
	- QSqlTableModel * model
	- std::list<std::unique_ptr<StatDatabaseViewOption>> filterOptions

	+ StatDatabaseViewWidget(QString, QWidget *)
	+ ~StatDatabaseViewWidget() override

	- void addFilterOptions()

	- void on_showButton_clicked()
	- void on_clearFilterButton_clicked()
	- void changeParametersFields(QString)
}
TestingSystem <- - StatDatabaseViewWidget

class StatError {
    + StatError(std::string)
}
Error <|- - StatError
SessionStat +- - StatError

class SessionStat {
	- QString username
	- QDateTime startTime
	- QDateTime finishTime
	- std::vector<std::pair<std::shared_ptr<Question>, int>> questionsRate

	+ SessionStat(QString)
	+ void AddQuestionRate(std::shared_ptr<Question>, int) noexcept
	+ void Save(QString)
	+ QString ToHtmlString() const
	+ void SetStartTime(QDateTime)
	+ void SetFinishTime(QDateTime)

	- static QTime duration(QDateTime, QDateTime) noexcept
	- int calculateUserRate() const noexcept
	- int calculateMaxRate() const noexcept
}

TestingSystem *- - SessionStat

class WelcomeToTesting {
	- Ui::WelcomeToTesting * ui

	+ WelcomeToTesting(QWidget *)
	+ ~WelcomeToTesting() override

	- void closeEvent(QCloseEvent *) override
	- void closed(QString username)
	- void testingRulesButtonClicked()
	- void on_startTestingButton_clicked()
	- void on_usernameLineEdit_textChanged()
	- void on_showTestingRulesButton_clicked()
}
TestingSystem *-left- WelcomeToTesting

class TestingWidget {
	- Ui::TestingWidget * ui
	- int currentQuestion
	- int amountOfQuestions
	- std::vector<std::shared_ptr<QuestionWidget>> questions
	- std::shared_ptr<SessionStat> currentSessionStat

    + TestingWidget(std::shared_ptr<SessionStat>, QWidget *)
    + ~TestingWidget() override

	- void readQuestions()
	- void displayCurrentQuestion()
	- void closeEvent(QCloseEvent *) override

	- void closed()

	- void on_answerButton_clicked()
}
TestingSystem *- - TestingWidget

class StatDatabaseViewOption {
    - const std::vector<QWidget *> fields
    - const QString optionName

    + StatDatabaseViewOption(const QString & optionName, std::vector<QWidget *> & fields)
    + virtual ~StatDatabaseViewOption() = 0

    + void SetFieldsVisibility(bool visible)
    + QString GetName() const noexcept
}
StatDatabaseViewWidget "1" *- - "..." StatDatabaseViewOption

class UsernameOption {
    + UsernameOption(std::vector<QWidget *> & fields)
    + ~UsernameOption() final
}
StatDatabaseViewOption <|- - UsernameOption

class TestingPeriodOption {
    + TestingPeriodOption(std::vector<QWidget *> & fields)
    + ~TestingPeriodOption() final
}
StatDatabaseViewOption <|- - TestingPeriodOption

class TestingDurationOption {
    + TestingDurationOption(std::vector<QWidget *> & fields)
    + ~TestingDurationOption() final
}
StatDatabaseViewOption <|- - TestingDurationOption

class CompletionPercentage {
    + CompletionPercentage(std::vector<QWidget *> & fields)
    + ~CompletionPercentage() final
}
StatDatabaseViewOption <|- - CompletionPercentage

' '''''''''''''''''''''''''''''''''''''''''''''''''''''' COMMON '''''''''''''''''''''''''''''''''''''''''''''''''''''' '

class Error {
    # std::string what

    + Error()
    + Error(const std::string & what
    + std::string What()
    + void Show()
}

class HtmlViewer {
    - Ui::HtmlViewer * ui

    + HtmlViewer(QWidget *)
    + ~HtmlViewer()

    + void OpenSource(const QString & source)
    + void SetWindowTitle(const QString & title)

    - void displaySource()
    - void on_prevPageButton_clicked()
    - void on_nextPageButton_clicked()
    - void urlChanged()
    - void on_settingsMenuBar_triggered()
}
MainWindow <-up- HtmlViewer
TestingSystem "1" *- - "1" HtmlViewer

class SettingsWindow {
    + ~SettingsWindow();
    + static SettingsWindow & Instance();

    - Ui::SettingsWindow *ui;
    - SettingsWindow(QWidget *parent = nullptr);
    - void update();

    - void on_changeTheorySourceButton_clicked();
    - void on_saveTheorySettingsButton_clicked();
    - void on_changeQuestionsSourceButton_clicked();
    - void on_saveTestingsWettingsButton_clicked();
}
HtmlViewer <- - SettingsWindow
TestingSystem <- - SettingsWindow

@enduml

@startuml

class MainWindow {
    - Ui::MainWindow * ui

    + MainWindow(QWidget *)
    + ~MainWindow() override
    
    - void displayHelloText()
    - void on_theoryButton_clicked()
    - void on_demoButton_clicked()
    - void on_testingButton_clicked()
}


class DemoSystem {
	- Ui::DemoSystem * ui
	- KruskalDemo * kruskalDemo
	- CyclesDemo * cyclesDemo

	+ DemoSystem(QWidget *)
	+ ~DemoSystem() override

	- void closeEvent(QCloseEvent *) override
	- void ShowKruskal()
	- void ShowCycles()
}
MainWindow - - DemoSystem

class GraphDemo {
    + GraphDemo(QWidget * parent, const QString & tempDirName, const QRect & sceneRect, const QRect & internalSceneRect)
    + virtual ~GraphDemo() = 0

    # QGraphicsScene * scene
    # QGraphicsScene * internalScene
    # std::unique_ptr<Graph> graph

    # std::list<QGraphicsSvgItem *> demoSteps
    # std::list<QGraphicsSvgItem*>::iterator currentStep

    # QDir tmp
    # int snapshotNumber = 1000

    # static std::unique_ptr<Graph> generateGraph() noexcept
    # void loadDemo()
}

class CyclesDemo {
	- Ui::CyclesDemo * ui
	- QGraphicsTextItem * stackView

	+ CyclesDemo(QWidget * parent)
    + ~CyclesDemo() override

	- void on_prevStepButton_clicked()
	- void on_nextStepButton_clicked()
	- void on_toBeginOfDemoButton_clicked()
	- void on_toEndOfDemoButton_clicked()
	- void on_startButton_clicked()
	- void on_switchDemoButton_clicked()
	- void takeSnapshot(QGraphicsScene *)
	- void displayStack(const std::stack<std::pair<Vertex *, Vertex *>> & st) noexcept

	- void switchDemo()
}
GraphDemo <|- - CyclesDemo
DemoSystem <- - CyclesDemo

class KruskalDemo {
	- Ui::KruskalDemo * ui
	- std::shared_ptr<Graph> mst

    + KruskalDemo(QWidget * parent)
    + ~KruskalDemo() override

	- void on_prevStepButton_clicked()
	- void on_nextStepButton_clicked()
	- void on_toBeginOfDemoButton_clicked()
	- void on_toEndOfDemoButton_clicked()
	- void on_switchDemoButton_clicked()
	- void takeSnapshot(QGraphicsScene * scene)

	- void switchDemo()
}
GraphDemo <|- - KruskalDemo
DemoSystem <- - KruskalDemo

class Graph {
    - std::list<Vertex> vertices
    - std::list<Edge> edges
    - QGraphicsScene * scene
    - QPoint graphCenter
    - uint64_t graphDiameter

	+ Graph(size_t numberOfVertices)
	+ Graph(const Graph & graph)
	+ void RandomlyLinkVertices(size_t numberOfEdges, int minEdgeCost, int maxEdgeCost)
	+ void Kruskal(Graph & mst)
	+ static bool DoesPathExist(std::list<Edge *> & path, Vertex *, Vertex *, Vertex *)
	+ void CheckEdgeInCycleDemo(Edge * edge)
	+ void PrepareToPaint(QPoint, int64_t, QGraphicsScene *)
	+ void Paint(uint32_t, uint32_t)
	+ void HideEdges()
	+ Edge * FindEdge(char, char) const noexcept
	+ Edge * FindEdge(Edge) const noexcept
	+ Vertex * FindVertex(char label) noexcept

    - void takeSnapshot(QGraphicsScene * scene) const
    - void stackChanged(std::stack<std::pair<Vertex *, Vertex *>> &) const
}
CyclesDemo o- - Graph
KruskalDemo o- - Graph

enum State {
    Unvisited
    Visited
}
class Vertex {
	- char label
	- std::vector<Edge *> edges
	- QGraphicsScene * scene
	- std::shared_ptr<QPoint> labelPos
	- std::shared_ptr<QRect> ellipse
	- QGraphicsEllipseItem * graphicsEllipse
	- QGraphicsTextItem * graphicsLabel

	+ State state
	+ Vertex(char)
	+ void PrepareToPaint(QPoint, QPoint, QSize, QGraphicsScene *)
	+ QPoint FindLabelPos(QPoint)
	+ void Paint(QPen, QBrush)
	+ QPoint Coordinates()
	+ void Show()
	+ void SetColor(int)
	+ char GetLabel()
}
Vertex *-up- State
Graph "1" *- - "..." Vertex
Vertex "2" o-right-o "..." Edge

class Edge {
	- Vertex * from
	- Vertex * to
	- int cost
	- QGraphicsScene * scene
	- std::shared_ptr<QPoint> costPos
	- std::shared_ptr<QLine> edge
	- QGraphicsLineItem * graphicsEdge
	- QGraphicsTextItem * graphicsCost

	+ Edge(Vertex *, Vertex *, int) noexcept
	+ void PrepareToPaint(QPoint, QGraphicsScene *)
	+ QPoint FindCostPos(QPoint) const noexcept
	+ void Paint(QPen)
	+ void SetPen(QPen)
	+ void Hide() noexcept
	+ void Show() noexcept
	+ QString GetName() const
}
Graph "1" *- - "..." Edge


class TestingSystem {
	- Ui::TestingSystem * ui
	- WelcomeToTesting * welcomeToTestingWidget
	- TestingWidget * testingWidget
	- SessionStatWidget * statWidget
	- std::shared_ptr<SessionStat> currentSessionStat
	- HtmlViewer * viewer

	+ TestingSystem(QWidget *)
	+ ~TestingSystem() override

    - void showRef(const QString & refSectionName)

	- void on_openSettingsMenu_triggered()
	- void on_statMenu_triggered()
	- void startTest(const QString & username)
	- void saveStat()
	- void showStat()
	- void showTestingRules()
    - void showEditQuestionsRules()
}
MainWindow <- - TestingSystem

class QuestionWidget {
	- Ui::QuestionWidget * ui
	- QTextBrowser * questionTextBrowser
	- shared_ptr<Question> question
	- vector<QCheckBox *> answersCheckBoxes
	- void formAnswers()

	+ QuestionWidget(shared_ptr<Question>, QWidget *, QTextBrowser *)
	+ ~QuestionWidget() override
	+ void Display()
	+ int RateAnswer()
	+ shared_ptr<Question> GetQuestion()
}
TestingWidget "1" *- - "..." QuestionWidget

enum Complexity {
    simple
    medium
    hard
}
class Question {
	- QString question
	- Complexity complexity
	- vector<QString> answers
	- set<int> correctAnswers

	+ Question()
	+ Question(QString, std::vector<QString>, std::set<int>, Complexity)
	+ Question(QJsonObject)
	+ int RateAnswer(std::set<int>) const noexcept
	+ QString GetQuestion() const noexcept
	+ vector<QString> GetAnswers() const noexcept
	+ Complexity GetComplexity() const noexcept
}
Question +-left- Complexity
QuestionWidget *- - Question

class SessionStatWidget {
    - Ui::SessionStatWidget * ui

	+ SessionStatWidget(shared_ptr<SessionStat>, QWidget *)
	+ ~SessionStatWidget() override

	- void closeEvent(QCloseEvent *) override
	- void closed()
}
TestingSystem *-up- SessionStatWidget

class StatDatabaseViewWidget {
	- Ui::StatDatabaseViewWidget * ui
	- QSqlDatabase * db
	- QSqlTableModel * model
	- std::list<std::unique_ptr<StatDatabaseViewOption>> filterOptions

	+ StatDatabaseViewWidget(QString, QWidget *)
	+ ~StatDatabaseViewWidget() override

	- void addFilterOptions()

	- void on_showButton_clicked()
	- void on_clearFilterButton_clicked()
	- void changeParametersFields(QString)
}
TestingSystem <- - StatDatabaseViewWidget

class StatError {
    + StatError(std::string)
}
Error <|- - StatError
SessionStat +- - StatError

class SessionStat {
	- QString username
	- QDateTime startTime
	- QDateTime finishTime
	- std::vector<std::pair<std::shared_ptr<Question>, int>> questionsRate

	+ SessionStat(QString)
	+ void AddQuestionRate(std::shared_ptr<Question>, int) noexcept
	+ void Save(QString)
	+ QString ToHtmlString() const
	+ void SetStartTime(QDateTime)
	+ void SetFinishTime(QDateTime)

	- static QTime duration(QDateTime, QDateTime) noexcept
	- int calculateUserRate() const noexcept
	- int calculateMaxRate() const noexcept
}

TestingSystem *- - SessionStat

class WelcomeToTesting {
	- Ui::WelcomeToTesting * ui

	+ WelcomeToTesting(QWidget *)
	+ ~WelcomeToTesting() override

	- void closeEvent(QCloseEvent *) override
	- void closed(QString username)
	- void testingRulesButtonClicked()
	- void on_startTestingButton_clicked()
	- void on_usernameLineEdit_textChanged()
	- void on_showTestingRulesButton_clicked()
}
TestingSystem *-left- WelcomeToTesting

class TestingWidget {
	- Ui::TestingWidget * ui
	- int currentQuestion
	- int amountOfQuestions
	- std::vector<std::shared_ptr<QuestionWidget>> questions
	- std::shared_ptr<SessionStat> currentSessionStat

    + TestingWidget(std::shared_ptr<SessionStat>, QWidget *)
    + ~TestingWidget() override

	- void readQuestions()
	- void displayCurrentQuestion()
	- void closeEvent(QCloseEvent *) override

	- void closed()

	- void on_answerButton_clicked()
}
TestingSystem *- - TestingWidget

class StatDatabaseViewOption {
    - const std::vector<QWidget *> fields
    - const QString optionName

    + StatDatabaseViewOption(const QString & optionName, std::vector<QWidget *> & fields)
    + virtual ~StatDatabaseViewOption() = 0

    + void SetFieldsVisibility(bool visible)
    + QString GetName() const noexcept
}
StatDatabaseViewWidget "1" *- - "..." StatDatabaseViewOption

class UsernameOption {
    + UsernameOption(std::vector<QWidget *> & fields)
    + ~UsernameOption() final
}
StatDatabaseViewOption <|- - UsernameOption

class TestingPeriodOption {
    + TestingPeriodOption(std::vector<QWidget *> & fields)
    + ~TestingPeriodOption() final
}
StatDatabaseViewOption <|- - TestingPeriodOption

class TestingDurationOption {
    + TestingDurationOption(std::vector<QWidget *> & fields)
    + ~TestingDurationOption() final
}
StatDatabaseViewOption <|- - TestingDurationOption

class CompletionPercentage {
    + CompletionPercentage(std::vector<QWidget *> & fields)
    + ~CompletionPercentage() final
}
StatDatabaseViewOption <|- - CompletionPercentage


class Error {
    # std::string what

    + Error()
    + Error(const std::string & what
    + std::string What()
    + void Show()
}

class HtmlViewer {
    - Ui::HtmlViewer * ui

    + HtmlViewer(QWidget *)
    + ~HtmlViewer()

    + void OpenSource(const QString & source)
    + void SetWindowTitle(const QString & title)

    - void displaySource()
    - void on_prevPageButton_clicked()
    - void on_nextPageButton_clicked()
    - void urlChanged()
    - void on_settingsMenuBar_triggered()
}
MainWindow <-up- HtmlViewer
TestingSystem "1" *- - "1" HtmlViewer

class SettingsWindow {
    + ~SettingsWindow();
    + static SettingsWindow & Instance();

    - Ui::SettingsWindow *ui;
    - SettingsWindow(QWidget *parent = nullptr);
    - void update();

    - void on_changeTheorySourceButton_clicked();
    - void on_saveTheorySettingsButton_clicked();
    - void on_changeQuestionsSourceButton_clicked();
    - void on_saveTestingsWettingsButton_clicked();
}
HtmlViewer <- - SettingsWindow
TestingSystem <- - SettingsWindow

@enduml

PlantUML version 1.2022.5(Sat Apr 30 14:55:52 GMT+04:00 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1251
Language: ru
Country: RU
--></g></svg>